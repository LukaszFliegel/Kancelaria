#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kancelaria.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Kancelaria")]
	public partial class KancelariaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSposobPlatnosci(SposobPlatnosci instance);
    partial void UpdateSposobPlatnosci(SposobPlatnosci instance);
    partial void DeleteSposobPlatnosci(SposobPlatnosci instance);
    partial void InsertFirma(Firma instance);
    partial void UpdateFirma(Firma instance);
    partial void DeleteFirma(Firma instance);
    partial void InsertRokObrotowy(RokObrotowy instance);
    partial void UpdateRokObrotowy(RokObrotowy instance);
    partial void DeleteRokObrotowy(RokObrotowy instance);
    partial void InsertJednostkaMiary(JednostkaMiary instance);
    partial void UpdateJednostkaMiary(JednostkaMiary instance);
    partial void DeleteJednostkaMiary(JednostkaMiary instance);
    partial void InsertKontoBankowe(KontoBankowe instance);
    partial void UpdateKontoBankowe(KontoBankowe instance);
    partial void DeleteKontoBankowe(KontoBankowe instance);
    partial void Insertwebpages_OAuthMembership(webpages_OAuthMembership instance);
    partial void Updatewebpages_OAuthMembership(webpages_OAuthMembership instance);
    partial void Deletewebpages_OAuthMembership(webpages_OAuthMembership instance);
    partial void Insertwebpages_Role(webpages_Role instance);
    partial void Updatewebpages_Role(webpages_Role instance);
    partial void Deletewebpages_Role(webpages_Role instance);
    partial void Insertwebpages_UsersInRole(webpages_UsersInRole instance);
    partial void Updatewebpages_UsersInRole(webpages_UsersInRole instance);
    partial void Deletewebpages_UsersInRole(webpages_UsersInRole instance);
    partial void Insertwebpages_Membership(webpages_Membership instance);
    partial void Updatewebpages_Membership(webpages_Membership instance);
    partial void Deletewebpages_Membership(webpages_Membership instance);
    partial void InsertKompensata(Kompensata instance);
    partial void UpdateKompensata(Kompensata instance);
    partial void DeleteKompensata(Kompensata instance);
    partial void InsertKompensataPowiazanie(KompensataPowiazanie instance);
    partial void UpdateKompensataPowiazanie(KompensataPowiazanie instance);
    partial void DeleteKompensataPowiazanie(KompensataPowiazanie instance);
    partial void InsertKontrahent(Kontrahent instance);
    partial void UpdateKontrahent(Kontrahent instance);
    partial void DeleteKontrahent(Kontrahent instance);
    partial void InsertZaplataFakturySprzedazy(ZaplataFakturySprzedazy instance);
    partial void UpdateZaplataFakturySprzedazy(ZaplataFakturySprzedazy instance);
    partial void DeleteZaplataFakturySprzedazy(ZaplataFakturySprzedazy instance);
    partial void InsertZaplataFakturyZakupu(ZaplataFakturyZakupu instance);
    partial void UpdateZaplataFakturyZakupu(ZaplataFakturyZakupu instance);
    partial void DeleteZaplataFakturyZakupu(ZaplataFakturyZakupu instance);
    partial void InsertFakturaZakupu(FakturaZakupu instance);
    partial void UpdateFakturaZakupu(FakturaZakupu instance);
    partial void DeleteFakturaZakupu(FakturaZakupu instance);
    partial void InsertTypInwestycji(TypInwestycji instance);
    partial void UpdateTypInwestycji(TypInwestycji instance);
    partial void DeleteTypInwestycji(TypInwestycji instance);
    partial void InsertInwestycja(Inwestycja instance);
    partial void UpdateInwestycja(Inwestycja instance);
    partial void DeleteInwestycja(Inwestycja instance);
    partial void InsertFakturaSprzedazy(FakturaSprzedazy instance);
    partial void UpdateFakturaSprzedazy(FakturaSprzedazy instance);
    partial void DeleteFakturaSprzedazy(FakturaSprzedazy instance);
    partial void InsertPozycjaFakturySprzedazy(PozycjaFakturySprzedazy instance);
    partial void UpdatePozycjaFakturySprzedazy(PozycjaFakturySprzedazy instance);
    partial void DeletePozycjaFakturySprzedazy(PozycjaFakturySprzedazy instance);
    partial void InsertPozycjaFakturyZakupu(PozycjaFakturyZakupu instance);
    partial void UpdatePozycjaFakturyZakupu(PozycjaFakturyZakupu instance);
    partial void DeletePozycjaFakturyZakupu(PozycjaFakturyZakupu instance);
    partial void InsertUzytkownik(Uzytkownik instance);
    partial void UpdateUzytkownik(Uzytkownik instance);
    partial void DeleteUzytkownik(Uzytkownik instance);
    #endregion
		
		public KancelariaDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public KancelariaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KancelariaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KancelariaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KancelariaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SposobPlatnosci> SposobPlatnoscis
		{
			get
			{
				return this.GetTable<SposobPlatnosci>();
			}
		}
		
		public System.Data.Linq.Table<Firma> Firmas
		{
			get
			{
				return this.GetTable<Firma>();
			}
		}
		
		public System.Data.Linq.Table<RokObrotowy> RokObrotowies
		{
			get
			{
				return this.GetTable<RokObrotowy>();
			}
		}
		
		public System.Data.Linq.Table<JednostkaMiary> JednostkaMiaries
		{
			get
			{
				return this.GetTable<JednostkaMiary>();
			}
		}
		
		public System.Data.Linq.Table<KontoBankowe> KontoBankowes
		{
			get
			{
				return this.GetTable<KontoBankowe>();
			}
		}
		
		public System.Data.Linq.Table<webpages_OAuthMembership> webpages_OAuthMemberships
		{
			get
			{
				return this.GetTable<webpages_OAuthMembership>();
			}
		}
		
		public System.Data.Linq.Table<webpages_Role> webpages_Roles
		{
			get
			{
				return this.GetTable<webpages_Role>();
			}
		}
		
		public System.Data.Linq.Table<webpages_UsersInRole> webpages_UsersInRoles
		{
			get
			{
				return this.GetTable<webpages_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<webpages_Membership> webpages_Memberships
		{
			get
			{
				return this.GetTable<webpages_Membership>();
			}
		}
		
		public System.Data.Linq.Table<Kompensata> Kompensatas
		{
			get
			{
				return this.GetTable<Kompensata>();
			}
		}
		
		public System.Data.Linq.Table<KompensataPowiazanie> KompensataPowiazanies
		{
			get
			{
				return this.GetTable<KompensataPowiazanie>();
			}
		}
		
		public System.Data.Linq.Table<NieuregulowanaFakturaZakupu> NieuregulowanaFakturaZakupus
		{
			get
			{
				return this.GetTable<NieuregulowanaFakturaZakupu>();
			}
		}
		
		public System.Data.Linq.Table<Kontrahent> Kontrahents
		{
			get
			{
				return this.GetTable<Kontrahent>();
			}
		}
		
		public System.Data.Linq.Table<ZaplataFakturySprzedazy> ZaplataFakturySprzedazies
		{
			get
			{
				return this.GetTable<ZaplataFakturySprzedazy>();
			}
		}
		
		public System.Data.Linq.Table<ZaplataFakturyZakupu> ZaplataFakturyZakupus
		{
			get
			{
				return this.GetTable<ZaplataFakturyZakupu>();
			}
		}
		
		public System.Data.Linq.Table<FakturaZakupu> FakturaZakupus
		{
			get
			{
				return this.GetTable<FakturaZakupu>();
			}
		}
		
		public System.Data.Linq.Table<AnalizaRozrachunku> AnalizaRozrachunkus
		{
			get
			{
				return this.GetTable<AnalizaRozrachunku>();
			}
		}
		
		public System.Data.Linq.Table<TypInwestycji> TypInwestycjis
		{
			get
			{
				return this.GetTable<TypInwestycji>();
			}
		}
		
		public System.Data.Linq.Table<KosztNaInwestycjach> KosztNaInwestycjaches
		{
			get
			{
				return this.GetTable<KosztNaInwestycjach>();
			}
		}
		
		public System.Data.Linq.Table<Inwestycja> Inwestycjas
		{
			get
			{
				return this.GetTable<Inwestycja>();
			}
		}
		
		public System.Data.Linq.Table<FakturaSprzedazy> FakturaSprzedazies
		{
			get
			{
				return this.GetTable<FakturaSprzedazy>();
			}
		}
		
		public System.Data.Linq.Table<NieuregulowanaFakturaSprzedazy> NieuregulowanaFakturaSprzedazies
		{
			get
			{
				return this.GetTable<NieuregulowanaFakturaSprzedazy>();
			}
		}
		
		public System.Data.Linq.Table<PozycjaFakturySprzedazy> PozycjaFakturySprzedazies
		{
			get
			{
				return this.GetTable<PozycjaFakturySprzedazy>();
			}
		}
		
		public System.Data.Linq.Table<PozycjaFakturyZakupu> PozycjaFakturyZakupus
		{
			get
			{
				return this.GetTable<PozycjaFakturyZakupu>();
			}
		}
		
		public System.Data.Linq.Table<Uzytkownik> Uzytkowniks
		{
			get
			{
				return this.GetTable<Uzytkownik>();
			}
		}
		
		public System.Data.Linq.Table<UzytkownikMembership> UzytkownikMemberships
		{
			get
			{
				return this.GetTable<UzytkownikMembership>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SkorygujFaktureSprzedazy")]
		public ISingleResult<SkorygujFaktureSprzedazyResult> SkorygujFaktureSprzedazy([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdFaktury", DbType="Int")] System.Nullable<int> idFaktury)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idFaktury);
			return ((ISingleResult<SkorygujFaktureSprzedazyResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SposobyPlatnosci")]
	public partial class SposobPlatnosci : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _KodSposobuPlatnosci;
		
		private string _OpisSposobuPlatnosci;
		
		private System.Nullable<bool> _CzyDomyslny;
		
		private EntitySet<FakturaZakupu> _FakturaZakupus;
		
		private EntitySet<FakturaSprzedazy> _FakturaSprzedazies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnKodSposobuPlatnosciChanging(string value);
    partial void OnKodSposobuPlatnosciChanged();
    partial void OnOpisSposobuPlatnosciChanging(string value);
    partial void OnOpisSposobuPlatnosciChanged();
    partial void OnCzyDomyslnyChanging(System.Nullable<bool> value);
    partial void OnCzyDomyslnyChanged();
    #endregion
		
		public SposobPlatnosci()
		{
			this._FakturaZakupus = new EntitySet<FakturaZakupu>(new Action<FakturaZakupu>(this.attach_FakturaZakupus), new Action<FakturaZakupu>(this.detach_FakturaZakupus));
			this._FakturaSprzedazies = new EntitySet<FakturaSprzedazy>(new Action<FakturaSprzedazy>(this.attach_FakturaSprzedazies), new Action<FakturaSprzedazy>(this.detach_FakturaSprzedazies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KodSposobuPlatnosci", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string KodSposobuPlatnosci
		{
			get
			{
				return this._KodSposobuPlatnosci;
			}
			set
			{
				if ((this._KodSposobuPlatnosci != value))
				{
					this.OnKodSposobuPlatnosciChanging(value);
					this.SendPropertyChanging();
					this._KodSposobuPlatnosci = value;
					this.SendPropertyChanged("KodSposobuPlatnosci");
					this.OnKodSposobuPlatnosciChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpisSposobuPlatnosci", DbType="NVarChar(300)")]
		public string OpisSposobuPlatnosci
		{
			get
			{
				return this._OpisSposobuPlatnosci;
			}
			set
			{
				if ((this._OpisSposobuPlatnosci != value))
				{
					this.OnOpisSposobuPlatnosciChanging(value);
					this.SendPropertyChanging();
					this._OpisSposobuPlatnosci = value;
					this.SendPropertyChanged("OpisSposobuPlatnosci");
					this.OnOpisSposobuPlatnosciChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CzyDomyslny", DbType="Bit")]
		public System.Nullable<bool> CzyDomyslny
		{
			get
			{
				return this._CzyDomyslny;
			}
			set
			{
				if ((this._CzyDomyslny != value))
				{
					this.OnCzyDomyslnyChanging(value);
					this.SendPropertyChanging();
					this._CzyDomyslny = value;
					this.SendPropertyChanged("CzyDomyslny");
					this.OnCzyDomyslnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SposobPlatnosci_FakturaZakupu", Storage="_FakturaZakupus", ThisKey="Id", OtherKey="IdSposobuPlatnosci")]
		public EntitySet<FakturaZakupu> FakturaZakupus
		{
			get
			{
				return this._FakturaZakupus;
			}
			set
			{
				this._FakturaZakupus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SposobPlatnosci_FakturaSprzedazy", Storage="_FakturaSprzedazies", ThisKey="Id", OtherKey="IdSposobuPlatnosci")]
		public EntitySet<FakturaSprzedazy> FakturaSprzedazies
		{
			get
			{
				return this._FakturaSprzedazies;
			}
			set
			{
				this._FakturaSprzedazies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FakturaZakupus(FakturaZakupu entity)
		{
			this.SendPropertyChanging();
			entity.SposobPlatnosci = this;
		}
		
		private void detach_FakturaZakupus(FakturaZakupu entity)
		{
			this.SendPropertyChanging();
			entity.SposobPlatnosci = null;
		}
		
		private void attach_FakturaSprzedazies(FakturaSprzedazy entity)
		{
			this.SendPropertyChanging();
			entity.SposobPlatnosci = this;
		}
		
		private void detach_FakturaSprzedazies(FakturaSprzedazy entity)
		{
			this.SendPropertyChanging();
			entity.SposobPlatnosci = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Firmy")]
	public partial class Firma : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _NazwaSkrocona;
		
		private string _NazwaPelna;
		
		private string _Ulica;
		
		private string _Miejscowosc;
		
		private string _NumerDomu;
		
		private string _NumerLokalu;
		
		private string _Panstwo;
		
		private string _KodPocztowy;
		
		private string _NIP;
		
		private System.Nullable<long> _Regon;
		
		private System.Nullable<long> _KRS;
		
		private EntitySet<RokObrotowy> _RokObrotowies;
		
		private EntitySet<KontoBankowe> _KontoBankowes;
		
		private EntitySet<Kompensata> _Kompensatas;
		
		private EntitySet<Kontrahent> _Kontrahents;
		
		private EntitySet<FakturaZakupu> _FakturaZakupus;
		
		private EntitySet<Inwestycja> _Inwestycjas;
		
		private EntitySet<FakturaSprzedazy> _FakturaSprzedazies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNazwaSkroconaChanging(string value);
    partial void OnNazwaSkroconaChanged();
    partial void OnNazwaPelnaChanging(string value);
    partial void OnNazwaPelnaChanged();
    partial void OnUlicaChanging(string value);
    partial void OnUlicaChanged();
    partial void OnMiejscowoscChanging(string value);
    partial void OnMiejscowoscChanged();
    partial void OnNumerDomuChanging(string value);
    partial void OnNumerDomuChanged();
    partial void OnNumerLokaluChanging(string value);
    partial void OnNumerLokaluChanged();
    partial void OnPanstwoChanging(string value);
    partial void OnPanstwoChanged();
    partial void OnKodPocztowyChanging(string value);
    partial void OnKodPocztowyChanged();
    partial void OnNIPChanging(string value);
    partial void OnNIPChanged();
    partial void OnRegonChanging(System.Nullable<long> value);
    partial void OnRegonChanged();
    partial void OnKRSChanging(System.Nullable<long> value);
    partial void OnKRSChanged();
    #endregion
		
		public Firma()
		{
			this._RokObrotowies = new EntitySet<RokObrotowy>(new Action<RokObrotowy>(this.attach_RokObrotowies), new Action<RokObrotowy>(this.detach_RokObrotowies));
			this._KontoBankowes = new EntitySet<KontoBankowe>(new Action<KontoBankowe>(this.attach_KontoBankowes), new Action<KontoBankowe>(this.detach_KontoBankowes));
			this._Kompensatas = new EntitySet<Kompensata>(new Action<Kompensata>(this.attach_Kompensatas), new Action<Kompensata>(this.detach_Kompensatas));
			this._Kontrahents = new EntitySet<Kontrahent>(new Action<Kontrahent>(this.attach_Kontrahents), new Action<Kontrahent>(this.detach_Kontrahents));
			this._FakturaZakupus = new EntitySet<FakturaZakupu>(new Action<FakturaZakupu>(this.attach_FakturaZakupus), new Action<FakturaZakupu>(this.detach_FakturaZakupus));
			this._Inwestycjas = new EntitySet<Inwestycja>(new Action<Inwestycja>(this.attach_Inwestycjas), new Action<Inwestycja>(this.detach_Inwestycjas));
			this._FakturaSprzedazies = new EntitySet<FakturaSprzedazy>(new Action<FakturaSprzedazy>(this.attach_FakturaSprzedazies), new Action<FakturaSprzedazy>(this.detach_FakturaSprzedazies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NazwaSkrocona", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NazwaSkrocona
		{
			get
			{
				return this._NazwaSkrocona;
			}
			set
			{
				if ((this._NazwaSkrocona != value))
				{
					this.OnNazwaSkroconaChanging(value);
					this.SendPropertyChanging();
					this._NazwaSkrocona = value;
					this.SendPropertyChanged("NazwaSkrocona");
					this.OnNazwaSkroconaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NazwaPelna", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string NazwaPelna
		{
			get
			{
				return this._NazwaPelna;
			}
			set
			{
				if ((this._NazwaPelna != value))
				{
					this.OnNazwaPelnaChanging(value);
					this.SendPropertyChanging();
					this._NazwaPelna = value;
					this.SendPropertyChanged("NazwaPelna");
					this.OnNazwaPelnaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ulica", DbType="NVarChar(100)")]
		public string Ulica
		{
			get
			{
				return this._Ulica;
			}
			set
			{
				if ((this._Ulica != value))
				{
					this.OnUlicaChanging(value);
					this.SendPropertyChanging();
					this._Ulica = value;
					this.SendPropertyChanged("Ulica");
					this.OnUlicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Miejscowosc", DbType="NVarChar(100)")]
		public string Miejscowosc
		{
			get
			{
				return this._Miejscowosc;
			}
			set
			{
				if ((this._Miejscowosc != value))
				{
					this.OnMiejscowoscChanging(value);
					this.SendPropertyChanging();
					this._Miejscowosc = value;
					this.SendPropertyChanged("Miejscowosc");
					this.OnMiejscowoscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerDomu", DbType="NVarChar(5)")]
		public string NumerDomu
		{
			get
			{
				return this._NumerDomu;
			}
			set
			{
				if ((this._NumerDomu != value))
				{
					this.OnNumerDomuChanging(value);
					this.SendPropertyChanging();
					this._NumerDomu = value;
					this.SendPropertyChanged("NumerDomu");
					this.OnNumerDomuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerLokalu", DbType="NVarChar(5)")]
		public string NumerLokalu
		{
			get
			{
				return this._NumerLokalu;
			}
			set
			{
				if ((this._NumerLokalu != value))
				{
					this.OnNumerLokaluChanging(value);
					this.SendPropertyChanging();
					this._NumerLokalu = value;
					this.SendPropertyChanged("NumerLokalu");
					this.OnNumerLokaluChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Panstwo", DbType="NVarChar(30)")]
		public string Panstwo
		{
			get
			{
				return this._Panstwo;
			}
			set
			{
				if ((this._Panstwo != value))
				{
					this.OnPanstwoChanging(value);
					this.SendPropertyChanging();
					this._Panstwo = value;
					this.SendPropertyChanged("Panstwo");
					this.OnPanstwoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KodPocztowy", DbType="NVarChar(10)")]
		public string KodPocztowy
		{
			get
			{
				return this._KodPocztowy;
			}
			set
			{
				if ((this._KodPocztowy != value))
				{
					this.OnKodPocztowyChanging(value);
					this.SendPropertyChanging();
					this._KodPocztowy = value;
					this.SendPropertyChanged("KodPocztowy");
					this.OnKodPocztowyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIP", DbType="NVarChar(20)")]
		public string NIP
		{
			get
			{
				return this._NIP;
			}
			set
			{
				if ((this._NIP != value))
				{
					this.OnNIPChanging(value);
					this.SendPropertyChanging();
					this._NIP = value;
					this.SendPropertyChanged("NIP");
					this.OnNIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Regon", DbType="BigInt")]
		public System.Nullable<long> Regon
		{
			get
			{
				return this._Regon;
			}
			set
			{
				if ((this._Regon != value))
				{
					this.OnRegonChanging(value);
					this.SendPropertyChanging();
					this._Regon = value;
					this.SendPropertyChanged("Regon");
					this.OnRegonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KRS", DbType="BigInt")]
		public System.Nullable<long> KRS
		{
			get
			{
				return this._KRS;
			}
			set
			{
				if ((this._KRS != value))
				{
					this.OnKRSChanging(value);
					this.SendPropertyChanging();
					this._KRS = value;
					this.SendPropertyChanged("KRS");
					this.OnKRSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Firma_RokObrotowy", Storage="_RokObrotowies", ThisKey="Id", OtherKey="IdFirmy")]
		public EntitySet<RokObrotowy> RokObrotowies
		{
			get
			{
				return this._RokObrotowies;
			}
			set
			{
				this._RokObrotowies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Firma_KontoBankowe", Storage="_KontoBankowes", ThisKey="Id", OtherKey="IdFirmy")]
		public EntitySet<KontoBankowe> KontoBankowes
		{
			get
			{
				return this._KontoBankowes;
			}
			set
			{
				this._KontoBankowes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Firma_Kompensata", Storage="_Kompensatas", ThisKey="Id", OtherKey="IdFirmy")]
		public EntitySet<Kompensata> Kompensatas
		{
			get
			{
				return this._Kompensatas;
			}
			set
			{
				this._Kompensatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Firma_Kontrahent", Storage="_Kontrahents", ThisKey="Id", OtherKey="IdFirmy")]
		public EntitySet<Kontrahent> Kontrahents
		{
			get
			{
				return this._Kontrahents;
			}
			set
			{
				this._Kontrahents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Firma_FakturaZakupu", Storage="_FakturaZakupus", ThisKey="Id", OtherKey="IdFirmy")]
		public EntitySet<FakturaZakupu> FakturaZakupus
		{
			get
			{
				return this._FakturaZakupus;
			}
			set
			{
				this._FakturaZakupus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Firma_Inwestycja", Storage="_Inwestycjas", ThisKey="Id", OtherKey="IdFirmy")]
		public EntitySet<Inwestycja> Inwestycjas
		{
			get
			{
				return this._Inwestycjas;
			}
			set
			{
				this._Inwestycjas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Firma_FakturaSprzedazy", Storage="_FakturaSprzedazies", ThisKey="Id", OtherKey="IdFirmy")]
		public EntitySet<FakturaSprzedazy> FakturaSprzedazies
		{
			get
			{
				return this._FakturaSprzedazies;
			}
			set
			{
				this._FakturaSprzedazies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RokObrotowies(RokObrotowy entity)
		{
			this.SendPropertyChanging();
			entity.Firma = this;
		}
		
		private void detach_RokObrotowies(RokObrotowy entity)
		{
			this.SendPropertyChanging();
			entity.Firma = null;
		}
		
		private void attach_KontoBankowes(KontoBankowe entity)
		{
			this.SendPropertyChanging();
			entity.Firma = this;
		}
		
		private void detach_KontoBankowes(KontoBankowe entity)
		{
			this.SendPropertyChanging();
			entity.Firma = null;
		}
		
		private void attach_Kompensatas(Kompensata entity)
		{
			this.SendPropertyChanging();
			entity.Firma = this;
		}
		
		private void detach_Kompensatas(Kompensata entity)
		{
			this.SendPropertyChanging();
			entity.Firma = null;
		}
		
		private void attach_Kontrahents(Kontrahent entity)
		{
			this.SendPropertyChanging();
			entity.Firma = this;
		}
		
		private void detach_Kontrahents(Kontrahent entity)
		{
			this.SendPropertyChanging();
			entity.Firma = null;
		}
		
		private void attach_FakturaZakupus(FakturaZakupu entity)
		{
			this.SendPropertyChanging();
			entity.Firma = this;
		}
		
		private void detach_FakturaZakupus(FakturaZakupu entity)
		{
			this.SendPropertyChanging();
			entity.Firma = null;
		}
		
		private void attach_Inwestycjas(Inwestycja entity)
		{
			this.SendPropertyChanging();
			entity.Firma = this;
		}
		
		private void detach_Inwestycjas(Inwestycja entity)
		{
			this.SendPropertyChanging();
			entity.Firma = null;
		}
		
		private void attach_FakturaSprzedazies(FakturaSprzedazy entity)
		{
			this.SendPropertyChanging();
			entity.Firma = this;
		}
		
		private void detach_FakturaSprzedazies(FakturaSprzedazy entity)
		{
			this.SendPropertyChanging();
			entity.Firma = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LataObrotowe")]
	public partial class RokObrotowy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdFirmy;
		
		private string _NazwaRoku;
		
		private EntitySet<Kompensata> _Kompensatas;
		
		private EntitySet<FakturaZakupu> _FakturaZakupus;
		
		private EntitySet<FakturaSprzedazy> _FakturaSprzedazies;
		
		private EntityRef<Firma> _Firma;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdFirmyChanging(int value);
    partial void OnIdFirmyChanged();
    partial void OnNazwaRokuChanging(string value);
    partial void OnNazwaRokuChanged();
    #endregion
		
		public RokObrotowy()
		{
			this._Kompensatas = new EntitySet<Kompensata>(new Action<Kompensata>(this.attach_Kompensatas), new Action<Kompensata>(this.detach_Kompensatas));
			this._FakturaZakupus = new EntitySet<FakturaZakupu>(new Action<FakturaZakupu>(this.attach_FakturaZakupus), new Action<FakturaZakupu>(this.detach_FakturaZakupus));
			this._FakturaSprzedazies = new EntitySet<FakturaSprzedazy>(new Action<FakturaSprzedazy>(this.attach_FakturaSprzedazies), new Action<FakturaSprzedazy>(this.detach_FakturaSprzedazies));
			this._Firma = default(EntityRef<Firma>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFirmy", DbType="Int NOT NULL")]
		public int IdFirmy
		{
			get
			{
				return this._IdFirmy;
			}
			set
			{
				if ((this._IdFirmy != value))
				{
					if (this._Firma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFirmyChanging(value);
					this.SendPropertyChanging();
					this._IdFirmy = value;
					this.SendPropertyChanged("IdFirmy");
					this.OnIdFirmyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NazwaRoku", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NazwaRoku
		{
			get
			{
				return this._NazwaRoku;
			}
			set
			{
				if ((this._NazwaRoku != value))
				{
					this.OnNazwaRokuChanging(value);
					this.SendPropertyChanging();
					this._NazwaRoku = value;
					this.SendPropertyChanged("NazwaRoku");
					this.OnNazwaRokuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RokObrotowy_Kompensata", Storage="_Kompensatas", ThisKey="Id", OtherKey="IdRoku")]
		public EntitySet<Kompensata> Kompensatas
		{
			get
			{
				return this._Kompensatas;
			}
			set
			{
				this._Kompensatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RokObrotowy_FakturaZakupu", Storage="_FakturaZakupus", ThisKey="Id", OtherKey="IdRoku")]
		public EntitySet<FakturaZakupu> FakturaZakupus
		{
			get
			{
				return this._FakturaZakupus;
			}
			set
			{
				this._FakturaZakupus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RokObrotowy_FakturaSprzedazy", Storage="_FakturaSprzedazies", ThisKey="Id", OtherKey="IdRoku")]
		public EntitySet<FakturaSprzedazy> FakturaSprzedazies
		{
			get
			{
				return this._FakturaSprzedazies;
			}
			set
			{
				this._FakturaSprzedazies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Firma_RokObrotowy", Storage="_Firma", ThisKey="IdFirmy", OtherKey="Id", IsForeignKey=true)]
		public Firma Firma
		{
			get
			{
				return this._Firma.Entity;
			}
			set
			{
				Firma previousValue = this._Firma.Entity;
				if (((previousValue != value) 
							|| (this._Firma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Firma.Entity = null;
						previousValue.RokObrotowies.Remove(this);
					}
					this._Firma.Entity = value;
					if ((value != null))
					{
						value.RokObrotowies.Add(this);
						this._IdFirmy = value.Id;
					}
					else
					{
						this._IdFirmy = default(int);
					}
					this.SendPropertyChanged("Firma");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kompensatas(Kompensata entity)
		{
			this.SendPropertyChanging();
			entity.RokObrotowy = this;
		}
		
		private void detach_Kompensatas(Kompensata entity)
		{
			this.SendPropertyChanging();
			entity.RokObrotowy = null;
		}
		
		private void attach_FakturaZakupus(FakturaZakupu entity)
		{
			this.SendPropertyChanging();
			entity.RokObrotowy = this;
		}
		
		private void detach_FakturaZakupus(FakturaZakupu entity)
		{
			this.SendPropertyChanging();
			entity.RokObrotowy = null;
		}
		
		private void attach_FakturaSprzedazies(FakturaSprzedazy entity)
		{
			this.SendPropertyChanging();
			entity.RokObrotowy = this;
		}
		
		private void detach_FakturaSprzedazies(FakturaSprzedazy entity)
		{
			this.SendPropertyChanging();
			entity.RokObrotowy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JednostkiMiary")]
	public partial class JednostkaMiary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _KodJednostkiMiary;
		
		private string _OpisJednostkiMiary;
		
		private System.Nullable<bool> _CzyDomyslna;
		
		private EntitySet<PozycjaFakturySprzedazy> _PozycjaFakturySprzedazies;
		
		private EntitySet<PozycjaFakturyZakupu> _PozycjaFakturyZakupus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnKodJednostkiMiaryChanging(string value);
    partial void OnKodJednostkiMiaryChanged();
    partial void OnOpisJednostkiMiaryChanging(string value);
    partial void OnOpisJednostkiMiaryChanged();
    partial void OnCzyDomyslnaChanging(System.Nullable<bool> value);
    partial void OnCzyDomyslnaChanged();
    #endregion
		
		public JednostkaMiary()
		{
			this._PozycjaFakturySprzedazies = new EntitySet<PozycjaFakturySprzedazy>(new Action<PozycjaFakturySprzedazy>(this.attach_PozycjaFakturySprzedazies), new Action<PozycjaFakturySprzedazy>(this.detach_PozycjaFakturySprzedazies));
			this._PozycjaFakturyZakupus = new EntitySet<PozycjaFakturyZakupu>(new Action<PozycjaFakturyZakupu>(this.attach_PozycjaFakturyZakupus), new Action<PozycjaFakturyZakupu>(this.detach_PozycjaFakturyZakupus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KodJednostkiMiary", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string KodJednostkiMiary
		{
			get
			{
				return this._KodJednostkiMiary;
			}
			set
			{
				if ((this._KodJednostkiMiary != value))
				{
					this.OnKodJednostkiMiaryChanging(value);
					this.SendPropertyChanging();
					this._KodJednostkiMiary = value;
					this.SendPropertyChanged("KodJednostkiMiary");
					this.OnKodJednostkiMiaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpisJednostkiMiary", DbType="NVarChar(300)")]
		public string OpisJednostkiMiary
		{
			get
			{
				return this._OpisJednostkiMiary;
			}
			set
			{
				if ((this._OpisJednostkiMiary != value))
				{
					this.OnOpisJednostkiMiaryChanging(value);
					this.SendPropertyChanging();
					this._OpisJednostkiMiary = value;
					this.SendPropertyChanged("OpisJednostkiMiary");
					this.OnOpisJednostkiMiaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CzyDomyslna", DbType="Bit")]
		public System.Nullable<bool> CzyDomyslna
		{
			get
			{
				return this._CzyDomyslna;
			}
			set
			{
				if ((this._CzyDomyslna != value))
				{
					this.OnCzyDomyslnaChanging(value);
					this.SendPropertyChanging();
					this._CzyDomyslna = value;
					this.SendPropertyChanged("CzyDomyslna");
					this.OnCzyDomyslnaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JednostkaMiary_PozycjaFakturySprzedazy", Storage="_PozycjaFakturySprzedazies", ThisKey="Id", OtherKey="IdJednostkiMiary")]
		public EntitySet<PozycjaFakturySprzedazy> PozycjaFakturySprzedazies
		{
			get
			{
				return this._PozycjaFakturySprzedazies;
			}
			set
			{
				this._PozycjaFakturySprzedazies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JednostkaMiary_PozycjaFakturyZakupu", Storage="_PozycjaFakturyZakupus", ThisKey="Id", OtherKey="IdJednostkiMiary")]
		public EntitySet<PozycjaFakturyZakupu> PozycjaFakturyZakupus
		{
			get
			{
				return this._PozycjaFakturyZakupus;
			}
			set
			{
				this._PozycjaFakturyZakupus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PozycjaFakturySprzedazies(PozycjaFakturySprzedazy entity)
		{
			this.SendPropertyChanging();
			entity.JednostkaMiary = this;
		}
		
		private void detach_PozycjaFakturySprzedazies(PozycjaFakturySprzedazy entity)
		{
			this.SendPropertyChanging();
			entity.JednostkaMiary = null;
		}
		
		private void attach_PozycjaFakturyZakupus(PozycjaFakturyZakupu entity)
		{
			this.SendPropertyChanging();
			entity.JednostkaMiary = this;
		}
		
		private void detach_PozycjaFakturyZakupus(PozycjaFakturyZakupu entity)
		{
			this.SendPropertyChanging();
			entity.JednostkaMiary = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KontaBankowe")]
	public partial class KontoBankowe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdFirmy;
		
		private string _NumerKonta;
		
		private string _Nazwa;
		
		private System.Nullable<bool> _CzyDomyslny;
		
		private string _NazwaBanku;
		
		private EntitySet<FakturaSprzedazy> _FakturaSprzedazies;
		
		private EntityRef<Firma> _Firma;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdFirmyChanging(int value);
    partial void OnIdFirmyChanged();
    partial void OnNumerKontaChanging(string value);
    partial void OnNumerKontaChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnCzyDomyslnyChanging(System.Nullable<bool> value);
    partial void OnCzyDomyslnyChanged();
    partial void OnNazwaBankuChanging(string value);
    partial void OnNazwaBankuChanged();
    #endregion
		
		public KontoBankowe()
		{
			this._FakturaSprzedazies = new EntitySet<FakturaSprzedazy>(new Action<FakturaSprzedazy>(this.attach_FakturaSprzedazies), new Action<FakturaSprzedazy>(this.detach_FakturaSprzedazies));
			this._Firma = default(EntityRef<Firma>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFirmy", DbType="Int NOT NULL")]
		public int IdFirmy
		{
			get
			{
				return this._IdFirmy;
			}
			set
			{
				if ((this._IdFirmy != value))
				{
					if (this._Firma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFirmyChanging(value);
					this.SendPropertyChanging();
					this._IdFirmy = value;
					this.SendPropertyChanged("IdFirmy");
					this.OnIdFirmyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerKonta", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NumerKonta
		{
			get
			{
				return this._NumerKonta;
			}
			set
			{
				if ((this._NumerKonta != value))
				{
					this.OnNumerKontaChanging(value);
					this.SendPropertyChanging();
					this._NumerKonta = value;
					this.SendPropertyChanged("NumerKonta");
					this.OnNumerKontaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="NVarChar(200)")]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CzyDomyslny", DbType="Bit")]
		public System.Nullable<bool> CzyDomyslny
		{
			get
			{
				return this._CzyDomyslny;
			}
			set
			{
				if ((this._CzyDomyslny != value))
				{
					this.OnCzyDomyslnyChanging(value);
					this.SendPropertyChanging();
					this._CzyDomyslny = value;
					this.SendPropertyChanged("CzyDomyslny");
					this.OnCzyDomyslnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NazwaBanku", DbType="NVarChar(300)")]
		public string NazwaBanku
		{
			get
			{
				return this._NazwaBanku;
			}
			set
			{
				if ((this._NazwaBanku != value))
				{
					this.OnNazwaBankuChanging(value);
					this.SendPropertyChanging();
					this._NazwaBanku = value;
					this.SendPropertyChanged("NazwaBanku");
					this.OnNazwaBankuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KontoBankowe_FakturaSprzedazy", Storage="_FakturaSprzedazies", ThisKey="Id,IdFirmy", OtherKey="IdKontaBankowegoFirmy,IdFirmy")]
		public EntitySet<FakturaSprzedazy> FakturaSprzedazies
		{
			get
			{
				return this._FakturaSprzedazies;
			}
			set
			{
				this._FakturaSprzedazies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Firma_KontoBankowe", Storage="_Firma", ThisKey="IdFirmy", OtherKey="Id", IsForeignKey=true)]
		public Firma Firma
		{
			get
			{
				return this._Firma.Entity;
			}
			set
			{
				Firma previousValue = this._Firma.Entity;
				if (((previousValue != value) 
							|| (this._Firma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Firma.Entity = null;
						previousValue.KontoBankowes.Remove(this);
					}
					this._Firma.Entity = value;
					if ((value != null))
					{
						value.KontoBankowes.Add(this);
						this._IdFirmy = value.Id;
					}
					else
					{
						this._IdFirmy = default(int);
					}
					this.SendPropertyChanged("Firma");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FakturaSprzedazies(FakturaSprzedazy entity)
		{
			this.SendPropertyChanging();
			entity.KontoBankowe = this;
		}
		
		private void detach_FakturaSprzedazies(FakturaSprzedazy entity)
		{
			this.SendPropertyChanging();
			entity.KontoBankowe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.webpages_OAuthMembership")]
	public partial class webpages_OAuthMembership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Provider;
		
		private string _ProviderUserId;
		
		private int _UserId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProviderChanging(string value);
    partial void OnProviderChanged();
    partial void OnProviderUserIdChanging(string value);
    partial void OnProviderUserIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    #endregion
		
		public webpages_OAuthMembership()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provider", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Provider
		{
			get
			{
				return this._Provider;
			}
			set
			{
				if ((this._Provider != value))
				{
					this.OnProviderChanging(value);
					this.SendPropertyChanging();
					this._Provider = value;
					this.SendPropertyChanged("Provider");
					this.OnProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderUserId", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProviderUserId
		{
			get
			{
				return this._ProviderUserId;
			}
			set
			{
				if ((this._ProviderUserId != value))
				{
					this.OnProviderUserIdChanging(value);
					this.SendPropertyChanging();
					this._ProviderUserId = value;
					this.SendPropertyChanged("ProviderUserId");
					this.OnProviderUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.webpages_Roles")]
	public partial class webpages_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleId;
		
		private string _RoleName;
		
		private EntitySet<webpages_UsersInRole> _webpages_UsersInRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    #endregion
		
		public webpages_Role()
		{
			this._webpages_UsersInRoles = new EntitySet<webpages_UsersInRole>(new Action<webpages_UsersInRole>(this.attach_webpages_UsersInRoles), new Action<webpages_UsersInRole>(this.detach_webpages_UsersInRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="webpages_Role_webpages_UsersInRole", Storage="_webpages_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<webpages_UsersInRole> webpages_UsersInRoles
		{
			get
			{
				return this._webpages_UsersInRoles;
			}
			set
			{
				this._webpages_UsersInRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_webpages_UsersInRoles(webpages_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.webpages_Role = this;
		}
		
		private void detach_webpages_UsersInRoles(webpages_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.webpages_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.webpages_UsersInRoles")]
	public partial class webpages_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private int _RoleId;
		
		private EntityRef<webpages_Role> _webpages_Role;
		
		private EntityRef<Uzytkownik> _Uzytkownik;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    #endregion
		
		public webpages_UsersInRole()
		{
			this._webpages_Role = default(EntityRef<webpages_Role>);
			this._Uzytkownik = default(EntityRef<Uzytkownik>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Uzytkownik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._webpages_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="webpages_Role_webpages_UsersInRole", Storage="_webpages_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public webpages_Role webpages_Role
		{
			get
			{
				return this._webpages_Role.Entity;
			}
			set
			{
				webpages_Role previousValue = this._webpages_Role.Entity;
				if (((previousValue != value) 
							|| (this._webpages_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._webpages_Role.Entity = null;
						previousValue.webpages_UsersInRoles.Remove(this);
					}
					this._webpages_Role.Entity = value;
					if ((value != null))
					{
						value.webpages_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("webpages_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uzytkownik_webpages_UsersInRole", Storage="_Uzytkownik", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Uzytkownik Uzytkownik
		{
			get
			{
				return this._Uzytkownik.Entity;
			}
			set
			{
				Uzytkownik previousValue = this._Uzytkownik.Entity;
				if (((previousValue != value) 
							|| (this._Uzytkownik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Uzytkownik.Entity = null;
						previousValue.webpages_UsersInRoles.Remove(this);
					}
					this._Uzytkownik.Entity = value;
					if ((value != null))
					{
						value.webpages_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("Uzytkownik");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.webpages_Membership")]
	public partial class webpages_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _ConfirmationToken;
		
		private System.Nullable<bool> _IsConfirmed;
		
		private System.Nullable<System.DateTime> _LastPasswordFailureDate;
		
		private int _PasswordFailuresSinceLastSuccess;
		
		private string _Password;
		
		private System.Nullable<System.DateTime> _PasswordChangedDate;
		
		private string _PasswordSalt;
		
		private string _PasswordVerificationToken;
		
		private System.Nullable<System.DateTime> _PasswordVerificationTokenExpirationDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnConfirmationTokenChanging(string value);
    partial void OnConfirmationTokenChanged();
    partial void OnIsConfirmedChanging(System.Nullable<bool> value);
    partial void OnIsConfirmedChanged();
    partial void OnLastPasswordFailureDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPasswordFailureDateChanged();
    partial void OnPasswordFailuresSinceLastSuccessChanging(int value);
    partial void OnPasswordFailuresSinceLastSuccessChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordChangedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPasswordChangedDateChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnPasswordVerificationTokenChanging(string value);
    partial void OnPasswordVerificationTokenChanged();
    partial void OnPasswordVerificationTokenExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPasswordVerificationTokenExpirationDateChanged();
    #endregion
		
		public webpages_Membership()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationToken", DbType="NVarChar(128)")]
		public string ConfirmationToken
		{
			get
			{
				return this._ConfirmationToken;
			}
			set
			{
				if ((this._ConfirmationToken != value))
				{
					this.OnConfirmationTokenChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationToken = value;
					this.SendPropertyChanged("ConfirmationToken");
					this.OnConfirmationTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConfirmed", DbType="Bit")]
		public System.Nullable<bool> IsConfirmed
		{
			get
			{
				return this._IsConfirmed;
			}
			set
			{
				if ((this._IsConfirmed != value))
				{
					this.OnIsConfirmedChanging(value);
					this.SendPropertyChanging();
					this._IsConfirmed = value;
					this.SendPropertyChanged("IsConfirmed");
					this.OnIsConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordFailureDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPasswordFailureDate
		{
			get
			{
				return this._LastPasswordFailureDate;
			}
			set
			{
				if ((this._LastPasswordFailureDate != value))
				{
					this.OnLastPasswordFailureDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordFailureDate = value;
					this.SendPropertyChanged("LastPasswordFailureDate");
					this.OnLastPasswordFailureDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFailuresSinceLastSuccess", DbType="Int NOT NULL")]
		public int PasswordFailuresSinceLastSuccess
		{
			get
			{
				return this._PasswordFailuresSinceLastSuccess;
			}
			set
			{
				if ((this._PasswordFailuresSinceLastSuccess != value))
				{
					this.OnPasswordFailuresSinceLastSuccessChanging(value);
					this.SendPropertyChanging();
					this._PasswordFailuresSinceLastSuccess = value;
					this.SendPropertyChanged("PasswordFailuresSinceLastSuccess");
					this.OnPasswordFailuresSinceLastSuccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordChangedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PasswordChangedDate
		{
			get
			{
				return this._PasswordChangedDate;
			}
			set
			{
				if ((this._PasswordChangedDate != value))
				{
					this.OnPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._PasswordChangedDate = value;
					this.SendPropertyChanged("PasswordChangedDate");
					this.OnPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordVerificationToken", DbType="NVarChar(128)")]
		public string PasswordVerificationToken
		{
			get
			{
				return this._PasswordVerificationToken;
			}
			set
			{
				if ((this._PasswordVerificationToken != value))
				{
					this.OnPasswordVerificationTokenChanging(value);
					this.SendPropertyChanging();
					this._PasswordVerificationToken = value;
					this.SendPropertyChanged("PasswordVerificationToken");
					this.OnPasswordVerificationTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordVerificationTokenExpirationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PasswordVerificationTokenExpirationDate
		{
			get
			{
				return this._PasswordVerificationTokenExpirationDate;
			}
			set
			{
				if ((this._PasswordVerificationTokenExpirationDate != value))
				{
					this.OnPasswordVerificationTokenExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._PasswordVerificationTokenExpirationDate = value;
					this.SendPropertyChanged("PasswordVerificationTokenExpirationDate");
					this.OnPasswordVerificationTokenExpirationDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kompensaty")]
	public partial class Kompensata : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdFirmy;
		
		private int _IdRoku;
		
		private string _NumerKompensaty;
		
		private int _IdKontrahenta;
		
		private System.DateTime _DataKompensaty;
		
		private EntitySet<KompensataPowiazanie> _KompensataPowiazanies;
		
		private EntityRef<Firma> _Firma;
		
		private EntityRef<RokObrotowy> _RokObrotowy;
		
		private EntityRef<Kontrahent> _Kontrahent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdFirmyChanging(int value);
    partial void OnIdFirmyChanged();
    partial void OnIdRokuChanging(int value);
    partial void OnIdRokuChanged();
    partial void OnNumerKompensatyChanging(string value);
    partial void OnNumerKompensatyChanged();
    partial void OnIdKontrahentaChanging(int value);
    partial void OnIdKontrahentaChanged();
    partial void OnDataKompensatyChanging(System.DateTime value);
    partial void OnDataKompensatyChanged();
    #endregion
		
		public Kompensata()
		{
			this._KompensataPowiazanies = new EntitySet<KompensataPowiazanie>(new Action<KompensataPowiazanie>(this.attach_KompensataPowiazanies), new Action<KompensataPowiazanie>(this.detach_KompensataPowiazanies));
			this._Firma = default(EntityRef<Firma>);
			this._RokObrotowy = default(EntityRef<RokObrotowy>);
			this._Kontrahent = default(EntityRef<Kontrahent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFirmy", DbType="Int NOT NULL")]
		public int IdFirmy
		{
			get
			{
				return this._IdFirmy;
			}
			set
			{
				if ((this._IdFirmy != value))
				{
					if (this._Firma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFirmyChanging(value);
					this.SendPropertyChanging();
					this._IdFirmy = value;
					this.SendPropertyChanged("IdFirmy");
					this.OnIdFirmyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRoku", DbType="Int NOT NULL")]
		public int IdRoku
		{
			get
			{
				return this._IdRoku;
			}
			set
			{
				if ((this._IdRoku != value))
				{
					if (this._RokObrotowy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdRokuChanging(value);
					this.SendPropertyChanging();
					this._IdRoku = value;
					this.SendPropertyChanged("IdRoku");
					this.OnIdRokuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerKompensaty", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NumerKompensaty
		{
			get
			{
				return this._NumerKompensaty;
			}
			set
			{
				if ((this._NumerKompensaty != value))
				{
					this.OnNumerKompensatyChanging(value);
					this.SendPropertyChanging();
					this._NumerKompensaty = value;
					this.SendPropertyChanged("NumerKompensaty");
					this.OnNumerKompensatyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKontrahenta", DbType="Int NOT NULL")]
		public int IdKontrahenta
		{
			get
			{
				return this._IdKontrahenta;
			}
			set
			{
				if ((this._IdKontrahenta != value))
				{
					if (this._Kontrahent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdKontrahentaChanging(value);
					this.SendPropertyChanging();
					this._IdKontrahenta = value;
					this.SendPropertyChanged("IdKontrahenta");
					this.OnIdKontrahentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataKompensaty", DbType="Date NOT NULL")]
		public System.DateTime DataKompensaty
		{
			get
			{
				return this._DataKompensaty;
			}
			set
			{
				if ((this._DataKompensaty != value))
				{
					this.OnDataKompensatyChanging(value);
					this.SendPropertyChanging();
					this._DataKompensaty = value;
					this.SendPropertyChanged("DataKompensaty");
					this.OnDataKompensatyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kompensata_KompensataPowiazanie", Storage="_KompensataPowiazanies", ThisKey="Id,IdKontrahenta", OtherKey="IdKompensaty,IdKontrahenta")]
		public EntitySet<KompensataPowiazanie> KompensataPowiazanies
		{
			get
			{
				return this._KompensataPowiazanies;
			}
			set
			{
				this._KompensataPowiazanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Firma_Kompensata", Storage="_Firma", ThisKey="IdFirmy", OtherKey="Id", IsForeignKey=true)]
		public Firma Firma
		{
			get
			{
				return this._Firma.Entity;
			}
			set
			{
				Firma previousValue = this._Firma.Entity;
				if (((previousValue != value) 
							|| (this._Firma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Firma.Entity = null;
						previousValue.Kompensatas.Remove(this);
					}
					this._Firma.Entity = value;
					if ((value != null))
					{
						value.Kompensatas.Add(this);
						this._IdFirmy = value.Id;
					}
					else
					{
						this._IdFirmy = default(int);
					}
					this.SendPropertyChanged("Firma");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RokObrotowy_Kompensata", Storage="_RokObrotowy", ThisKey="IdRoku", OtherKey="Id", IsForeignKey=true)]
		public RokObrotowy RokObrotowy
		{
			get
			{
				return this._RokObrotowy.Entity;
			}
			set
			{
				RokObrotowy previousValue = this._RokObrotowy.Entity;
				if (((previousValue != value) 
							|| (this._RokObrotowy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RokObrotowy.Entity = null;
						previousValue.Kompensatas.Remove(this);
					}
					this._RokObrotowy.Entity = value;
					if ((value != null))
					{
						value.Kompensatas.Add(this);
						this._IdRoku = value.Id;
					}
					else
					{
						this._IdRoku = default(int);
					}
					this.SendPropertyChanged("RokObrotowy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kontrahent_Kompensata", Storage="_Kontrahent", ThisKey="IdKontrahenta", OtherKey="Id", IsForeignKey=true)]
		public Kontrahent Kontrahent
		{
			get
			{
				return this._Kontrahent.Entity;
			}
			set
			{
				Kontrahent previousValue = this._Kontrahent.Entity;
				if (((previousValue != value) 
							|| (this._Kontrahent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kontrahent.Entity = null;
						previousValue.Kompensatas.Remove(this);
					}
					this._Kontrahent.Entity = value;
					if ((value != null))
					{
						value.Kompensatas.Add(this);
						this._IdKontrahenta = value.Id;
					}
					else
					{
						this._IdKontrahenta = default(int);
					}
					this.SendPropertyChanged("Kontrahent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KompensataPowiazanies(KompensataPowiazanie entity)
		{
			this.SendPropertyChanging();
			entity.Kompensata = this;
		}
		
		private void detach_KompensataPowiazanies(KompensataPowiazanie entity)
		{
			this.SendPropertyChanging();
			entity.Kompensata = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KompensatyPowiazania")]
	public partial class KompensataPowiazanie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdKompensaty;
		
		private int _IdKontrahenta;
		
		private System.Nullable<int> _IdFakturySprzedazy;
		
		private System.Nullable<int> _IdFakturyZakupu;
		
		private decimal _Kwota;
		
		private EntityRef<Kompensata> _Kompensata;
		
		private EntityRef<FakturaZakupu> _FakturaZakupu;
		
		private EntityRef<FakturaSprzedazy> _FakturaSprzedazy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdKompensatyChanging(int value);
    partial void OnIdKompensatyChanged();
    partial void OnIdKontrahentaChanging(int value);
    partial void OnIdKontrahentaChanged();
    partial void OnIdFakturySprzedazyChanging(System.Nullable<int> value);
    partial void OnIdFakturySprzedazyChanged();
    partial void OnIdFakturyZakupuChanging(System.Nullable<int> value);
    partial void OnIdFakturyZakupuChanged();
    partial void OnKwotaChanging(decimal value);
    partial void OnKwotaChanged();
    #endregion
		
		public KompensataPowiazanie()
		{
			this._Kompensata = default(EntityRef<Kompensata>);
			this._FakturaZakupu = default(EntityRef<FakturaZakupu>);
			this._FakturaSprzedazy = default(EntityRef<FakturaSprzedazy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKompensaty", DbType="Int NOT NULL")]
		public int IdKompensaty
		{
			get
			{
				return this._IdKompensaty;
			}
			set
			{
				if ((this._IdKompensaty != value))
				{
					if (this._Kompensata.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdKompensatyChanging(value);
					this.SendPropertyChanging();
					this._IdKompensaty = value;
					this.SendPropertyChanged("IdKompensaty");
					this.OnIdKompensatyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKontrahenta", DbType="Int NOT NULL")]
		public int IdKontrahenta
		{
			get
			{
				return this._IdKontrahenta;
			}
			set
			{
				if ((this._IdKontrahenta != value))
				{
					if (((this._Kompensata.HasLoadedOrAssignedValue || this._FakturaZakupu.HasLoadedOrAssignedValue) 
								|| this._FakturaSprzedazy.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdKontrahentaChanging(value);
					this.SendPropertyChanging();
					this._IdKontrahenta = value;
					this.SendPropertyChanged("IdKontrahenta");
					this.OnIdKontrahentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFakturySprzedazy", DbType="Int")]
		public System.Nullable<int> IdFakturySprzedazy
		{
			get
			{
				return this._IdFakturySprzedazy;
			}
			set
			{
				if ((this._IdFakturySprzedazy != value))
				{
					if (this._FakturaSprzedazy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFakturySprzedazyChanging(value);
					this.SendPropertyChanging();
					this._IdFakturySprzedazy = value;
					this.SendPropertyChanged("IdFakturySprzedazy");
					this.OnIdFakturySprzedazyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFakturyZakupu", DbType="Int")]
		public System.Nullable<int> IdFakturyZakupu
		{
			get
			{
				return this._IdFakturyZakupu;
			}
			set
			{
				if ((this._IdFakturyZakupu != value))
				{
					if (this._FakturaZakupu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFakturyZakupuChanging(value);
					this.SendPropertyChanging();
					this._IdFakturyZakupu = value;
					this.SendPropertyChanged("IdFakturyZakupu");
					this.OnIdFakturyZakupuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kwota", DbType="Decimal(16,2) NOT NULL")]
		public decimal Kwota
		{
			get
			{
				return this._Kwota;
			}
			set
			{
				if ((this._Kwota != value))
				{
					this.OnKwotaChanging(value);
					this.SendPropertyChanging();
					this._Kwota = value;
					this.SendPropertyChanged("Kwota");
					this.OnKwotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kompensata_KompensataPowiazanie", Storage="_Kompensata", ThisKey="IdKompensaty,IdKontrahenta", OtherKey="Id,IdKontrahenta", IsForeignKey=true)]
		public Kompensata Kompensata
		{
			get
			{
				return this._Kompensata.Entity;
			}
			set
			{
				Kompensata previousValue = this._Kompensata.Entity;
				if (((previousValue != value) 
							|| (this._Kompensata.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kompensata.Entity = null;
						previousValue.KompensataPowiazanies.Remove(this);
					}
					this._Kompensata.Entity = value;
					if ((value != null))
					{
						value.KompensataPowiazanies.Add(this);
						this._IdKompensaty = value.Id;
						this._IdKontrahenta = value.IdKontrahenta;
					}
					else
					{
						this._IdKompensaty = default(int);
						this._IdKontrahenta = default(int);
					}
					this.SendPropertyChanged("Kompensata");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FakturaZakupu_KompensataPowiazanie", Storage="_FakturaZakupu", ThisKey="IdFakturyZakupu,IdKontrahenta", OtherKey="Id,IdKontrahenta", IsForeignKey=true)]
		public FakturaZakupu FakturaZakupu
		{
			get
			{
				return this._FakturaZakupu.Entity;
			}
			set
			{
				FakturaZakupu previousValue = this._FakturaZakupu.Entity;
				if (((previousValue != value) 
							|| (this._FakturaZakupu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FakturaZakupu.Entity = null;
						previousValue.KompensataPowiazanies.Remove(this);
					}
					this._FakturaZakupu.Entity = value;
					if ((value != null))
					{
						value.KompensataPowiazanies.Add(this);
						this._IdFakturyZakupu = value.Id;
						this._IdKontrahenta = value.IdKontrahenta;
					}
					else
					{
						this._IdFakturyZakupu = default(Nullable<int>);
						this._IdKontrahenta = default(int);
					}
					this.SendPropertyChanged("FakturaZakupu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FakturaSprzedazy_KompensataPowiazanie", Storage="_FakturaSprzedazy", ThisKey="IdFakturySprzedazy,IdKontrahenta", OtherKey="Id,IdKontrahenta", IsForeignKey=true)]
		public FakturaSprzedazy FakturaSprzedazy
		{
			get
			{
				return this._FakturaSprzedazy.Entity;
			}
			set
			{
				FakturaSprzedazy previousValue = this._FakturaSprzedazy.Entity;
				if (((previousValue != value) 
							|| (this._FakturaSprzedazy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FakturaSprzedazy.Entity = null;
						previousValue.KompensataPowiazanies.Remove(this);
					}
					this._FakturaSprzedazy.Entity = value;
					if ((value != null))
					{
						value.KompensataPowiazanies.Add(this);
						this._IdFakturySprzedazy = value.Id;
						this._IdKontrahenta = value.IdKontrahenta;
					}
					else
					{
						this._IdFakturySprzedazy = default(Nullable<int>);
						this._IdKontrahenta = default(int);
					}
					this.SendPropertyChanged("FakturaSprzedazy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NieuregulowaneFakturyZakupu_vw")]
	public partial class NieuregulowanaFakturaZakupu
	{
		
		private int _Id;
		
		private int _IdFirmy;
		
		private int _IdRoku;
		
		private string _NumerFaktury;
		
		private System.DateTime _DataFaktury;
		
		private System.DateTime _TerminPlatnosci;
		
		private string _Opis;
		
		private int _IdKontrahenta;
		
		private System.Nullable<decimal> _KwotaZaplacona;
		
		private System.Nullable<decimal> _KwotaNetto;
		
		private System.Nullable<decimal> _KwotaVat;
		
		private System.Nullable<decimal> _KwotaBrutto;
		
		private System.Nullable<decimal> _KwotaSkompensowana;
		
		private System.Nullable<decimal> _KwotaNieuregulowana;
		
		private string _KodKontrahenta;
		
		public NieuregulowanaFakturaZakupu()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFirmy", DbType="Int NOT NULL")]
		public int IdFirmy
		{
			get
			{
				return this._IdFirmy;
			}
			set
			{
				if ((this._IdFirmy != value))
				{
					this._IdFirmy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRoku", DbType="Int NOT NULL")]
		public int IdRoku
		{
			get
			{
				return this._IdRoku;
			}
			set
			{
				if ((this._IdRoku != value))
				{
					this._IdRoku = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerFaktury", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NumerFaktury
		{
			get
			{
				return this._NumerFaktury;
			}
			set
			{
				if ((this._NumerFaktury != value))
				{
					this._NumerFaktury = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFaktury", DbType="Date NOT NULL")]
		public System.DateTime DataFaktury
		{
			get
			{
				return this._DataFaktury;
			}
			set
			{
				if ((this._DataFaktury != value))
				{
					this._DataFaktury = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminPlatnosci", DbType="Date NOT NULL")]
		public System.DateTime TerminPlatnosci
		{
			get
			{
				return this._TerminPlatnosci;
			}
			set
			{
				if ((this._TerminPlatnosci != value))
				{
					this._TerminPlatnosci = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NVarChar(1000)")]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this._Opis = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKontrahenta", DbType="Int NOT NULL")]
		public int IdKontrahenta
		{
			get
			{
				return this._IdKontrahenta;
			}
			set
			{
				if ((this._IdKontrahenta != value))
				{
					this._IdKontrahenta = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KwotaZaplacona", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> KwotaZaplacona
		{
			get
			{
				return this._KwotaZaplacona;
			}
			set
			{
				if ((this._KwotaZaplacona != value))
				{
					this._KwotaZaplacona = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KwotaNetto", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> KwotaNetto
		{
			get
			{
				return this._KwotaNetto;
			}
			set
			{
				if ((this._KwotaNetto != value))
				{
					this._KwotaNetto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KwotaVat", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> KwotaVat
		{
			get
			{
				return this._KwotaVat;
			}
			set
			{
				if ((this._KwotaVat != value))
				{
					this._KwotaVat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KwotaBrutto", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> KwotaBrutto
		{
			get
			{
				return this._KwotaBrutto;
			}
			set
			{
				if ((this._KwotaBrutto != value))
				{
					this._KwotaBrutto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KwotaSkompensowana", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> KwotaSkompensowana
		{
			get
			{
				return this._KwotaSkompensowana;
			}
			set
			{
				if ((this._KwotaSkompensowana != value))
				{
					this._KwotaSkompensowana = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KwotaNieuregulowana", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> KwotaNieuregulowana
		{
			get
			{
				return this._KwotaNieuregulowana;
			}
			set
			{
				if ((this._KwotaNieuregulowana != value))
				{
					this._KwotaNieuregulowana = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KodKontrahenta", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string KodKontrahenta
		{
			get
			{
				return this._KodKontrahenta;
			}
			set
			{
				if ((this._KodKontrahenta != value))
				{
					this._KodKontrahenta = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kontrahenci")]
	public partial class Kontrahent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdFirmy;
		
		private string _KodKontrahenta;
		
		private string _NazwaKontrahenta;
		
		private string _NIP;
		
		private string _Miejscowosc;
		
		private string _Ulica;
		
		private string _NumerDomu;
		
		private string _NumerLokalu;
		
		private string _KodPocztowy;
		
		private string _Panstwo;
		
		private string _NumerKontaBankowego;
		
		private System.Nullable<bool> _CzyDomyslny;
		
		private System.Nullable<int> _IdKontrahentaNadrzednego;
		
		private bool _CzyVatowiec;
		
		private EntitySet<Kompensata> _Kompensatas;
		
		private EntitySet<Kontrahent> _Kontrahents;
		
		private EntitySet<FakturaZakupu> _FakturaZakupus;
		
		private EntitySet<FakturaSprzedazy> _FakturaSprzedazies;
		
		private EntityRef<Firma> _Firma;
		
		private EntityRef<Kontrahent> _Kontrahenci1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdFirmyChanging(int value);
    partial void OnIdFirmyChanged();
    partial void OnKodKontrahentaChanging(string value);
    partial void OnKodKontrahentaChanged();
    partial void OnNazwaKontrahentaChanging(string value);
    partial void OnNazwaKontrahentaChanged();
    partial void OnNIPChanging(string value);
    partial void OnNIPChanged();
    partial void OnMiejscowoscChanging(string value);
    partial void OnMiejscowoscChanged();
    partial void OnUlicaChanging(string value);
    partial void OnUlicaChanged();
    partial void OnNumerDomuChanging(string value);
    partial void OnNumerDomuChanged();
    partial void OnNumerLokaluChanging(string value);
    partial void OnNumerLokaluChanged();
    partial void OnKodPocztowyChanging(string value);
    partial void OnKodPocztowyChanged();
    partial void OnPanstwoChanging(string value);
    partial void OnPanstwoChanged();
    partial void OnNumerKontaBankowegoChanging(string value);
    partial void OnNumerKontaBankowegoChanged();
    partial void OnCzyDomyslnyChanging(System.Nullable<bool> value);
    partial void OnCzyDomyslnyChanged();
    partial void OnIdKontrahentaNadrzednegoChanging(System.Nullable<int> value);
    partial void OnIdKontrahentaNadrzednegoChanged();
    partial void OnCzyVatowiecChanging(bool value);
    partial void OnCzyVatowiecChanged();
    #endregion
		
		public Kontrahent()
		{
			this._Kompensatas = new EntitySet<Kompensata>(new Action<Kompensata>(this.attach_Kompensatas), new Action<Kompensata>(this.detach_Kompensatas));
			this._Kontrahents = new EntitySet<Kontrahent>(new Action<Kontrahent>(this.attach_Kontrahents), new Action<Kontrahent>(this.detach_Kontrahents));
			this._FakturaZakupus = new EntitySet<FakturaZakupu>(new Action<FakturaZakupu>(this.attach_FakturaZakupus), new Action<FakturaZakupu>(this.detach_FakturaZakupus));
			this._FakturaSprzedazies = new EntitySet<FakturaSprzedazy>(new Action<FakturaSprzedazy>(this.attach_FakturaSprzedazies), new Action<FakturaSprzedazy>(this.detach_FakturaSprzedazies));
			this._Firma = default(EntityRef<Firma>);
			this._Kontrahenci1 = default(EntityRef<Kontrahent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFirmy", DbType="Int NOT NULL")]
		public int IdFirmy
		{
			get
			{
				return this._IdFirmy;
			}
			set
			{
				if ((this._IdFirmy != value))
				{
					if (this._Firma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFirmyChanging(value);
					this.SendPropertyChanging();
					this._IdFirmy = value;
					this.SendPropertyChanged("IdFirmy");
					this.OnIdFirmyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KodKontrahenta", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string KodKontrahenta
		{
			get
			{
				return this._KodKontrahenta;
			}
			set
			{
				if ((this._KodKontrahenta != value))
				{
					this.OnKodKontrahentaChanging(value);
					this.SendPropertyChanging();
					this._KodKontrahenta = value;
					this.SendPropertyChanged("KodKontrahenta");
					this.OnKodKontrahentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NazwaKontrahenta", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string NazwaKontrahenta
		{
			get
			{
				return this._NazwaKontrahenta;
			}
			set
			{
				if ((this._NazwaKontrahenta != value))
				{
					this.OnNazwaKontrahentaChanging(value);
					this.SendPropertyChanging();
					this._NazwaKontrahenta = value;
					this.SendPropertyChanged("NazwaKontrahenta");
					this.OnNazwaKontrahentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIP", DbType="NVarChar(20)")]
		public string NIP
		{
			get
			{
				return this._NIP;
			}
			set
			{
				if ((this._NIP != value))
				{
					this.OnNIPChanging(value);
					this.SendPropertyChanging();
					this._NIP = value;
					this.SendPropertyChanged("NIP");
					this.OnNIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Miejscowosc", DbType="NVarChar(100)")]
		public string Miejscowosc
		{
			get
			{
				return this._Miejscowosc;
			}
			set
			{
				if ((this._Miejscowosc != value))
				{
					this.OnMiejscowoscChanging(value);
					this.SendPropertyChanging();
					this._Miejscowosc = value;
					this.SendPropertyChanged("Miejscowosc");
					this.OnMiejscowoscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ulica", DbType="NVarChar(100)")]
		public string Ulica
		{
			get
			{
				return this._Ulica;
			}
			set
			{
				if ((this._Ulica != value))
				{
					this.OnUlicaChanging(value);
					this.SendPropertyChanging();
					this._Ulica = value;
					this.SendPropertyChanged("Ulica");
					this.OnUlicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerDomu", DbType="NVarChar(5)")]
		public string NumerDomu
		{
			get
			{
				return this._NumerDomu;
			}
			set
			{
				if ((this._NumerDomu != value))
				{
					this.OnNumerDomuChanging(value);
					this.SendPropertyChanging();
					this._NumerDomu = value;
					this.SendPropertyChanged("NumerDomu");
					this.OnNumerDomuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerLokalu", DbType="NVarChar(5)")]
		public string NumerLokalu
		{
			get
			{
				return this._NumerLokalu;
			}
			set
			{
				if ((this._NumerLokalu != value))
				{
					this.OnNumerLokaluChanging(value);
					this.SendPropertyChanging();
					this._NumerLokalu = value;
					this.SendPropertyChanged("NumerLokalu");
					this.OnNumerLokaluChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KodPocztowy", DbType="NVarChar(10)")]
		public string KodPocztowy
		{
			get
			{
				return this._KodPocztowy;
			}
			set
			{
				if ((this._KodPocztowy != value))
				{
					this.OnKodPocztowyChanging(value);
					this.SendPropertyChanging();
					this._KodPocztowy = value;
					this.SendPropertyChanged("KodPocztowy");
					this.OnKodPocztowyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Panstwo", DbType="NVarChar(30)")]
		public string Panstwo
		{
			get
			{
				return this._Panstwo;
			}
			set
			{
				if ((this._Panstwo != value))
				{
					this.OnPanstwoChanging(value);
					this.SendPropertyChanging();
					this._Panstwo = value;
					this.SendPropertyChanged("Panstwo");
					this.OnPanstwoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerKontaBankowego", DbType="NVarChar(50)")]
		public string NumerKontaBankowego
		{
			get
			{
				return this._NumerKontaBankowego;
			}
			set
			{
				if ((this._NumerKontaBankowego != value))
				{
					this.OnNumerKontaBankowegoChanging(value);
					this.SendPropertyChanging();
					this._NumerKontaBankowego = value;
					this.SendPropertyChanged("NumerKontaBankowego");
					this.OnNumerKontaBankowegoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CzyDomyslny", DbType="Bit")]
		public System.Nullable<bool> CzyDomyslny
		{
			get
			{
				return this._CzyDomyslny;
			}
			set
			{
				if ((this._CzyDomyslny != value))
				{
					this.OnCzyDomyslnyChanging(value);
					this.SendPropertyChanging();
					this._CzyDomyslny = value;
					this.SendPropertyChanged("CzyDomyslny");
					this.OnCzyDomyslnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKontrahentaNadrzednego", DbType="Int")]
		public System.Nullable<int> IdKontrahentaNadrzednego
		{
			get
			{
				return this._IdKontrahentaNadrzednego;
			}
			set
			{
				if ((this._IdKontrahentaNadrzednego != value))
				{
					if (this._Kontrahenci1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdKontrahentaNadrzednegoChanging(value);
					this.SendPropertyChanging();
					this._IdKontrahentaNadrzednego = value;
					this.SendPropertyChanged("IdKontrahentaNadrzednego");
					this.OnIdKontrahentaNadrzednegoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CzyVatowiec", DbType="Bit NOT NULL")]
		public bool CzyVatowiec
		{
			get
			{
				return this._CzyVatowiec;
			}
			set
			{
				if ((this._CzyVatowiec != value))
				{
					this.OnCzyVatowiecChanging(value);
					this.SendPropertyChanging();
					this._CzyVatowiec = value;
					this.SendPropertyChanged("CzyVatowiec");
					this.OnCzyVatowiecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kontrahent_Kompensata", Storage="_Kompensatas", ThisKey="Id", OtherKey="IdKontrahenta")]
		public EntitySet<Kompensata> Kompensatas
		{
			get
			{
				return this._Kompensatas;
			}
			set
			{
				this._Kompensatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kontrahent_Kontrahent", Storage="_Kontrahents", ThisKey="Id", OtherKey="IdKontrahentaNadrzednego")]
		public EntitySet<Kontrahent> Kontrahents
		{
			get
			{
				return this._Kontrahents;
			}
			set
			{
				this._Kontrahents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kontrahent_FakturaZakupu", Storage="_FakturaZakupus", ThisKey="Id", OtherKey="IdKontrahenta")]
		public EntitySet<FakturaZakupu> FakturaZakupus
		{
			get
			{
				return this._FakturaZakupus;
			}
			set
			{
				this._FakturaZakupus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kontrahent_FakturaSprzedazy", Storage="_FakturaSprzedazies", ThisKey="Id", OtherKey="IdKontrahenta")]
		public EntitySet<FakturaSprzedazy> FakturaSprzedazies
		{
			get
			{
				return this._FakturaSprzedazies;
			}
			set
			{
				this._FakturaSprzedazies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Firma_Kontrahent", Storage="_Firma", ThisKey="IdFirmy", OtherKey="Id", IsForeignKey=true)]
		public Firma Firma
		{
			get
			{
				return this._Firma.Entity;
			}
			set
			{
				Firma previousValue = this._Firma.Entity;
				if (((previousValue != value) 
							|| (this._Firma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Firma.Entity = null;
						previousValue.Kontrahents.Remove(this);
					}
					this._Firma.Entity = value;
					if ((value != null))
					{
						value.Kontrahents.Add(this);
						this._IdFirmy = value.Id;
					}
					else
					{
						this._IdFirmy = default(int);
					}
					this.SendPropertyChanged("Firma");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kontrahent_Kontrahent", Storage="_Kontrahenci1", ThisKey="IdKontrahentaNadrzednego", OtherKey="Id", IsForeignKey=true)]
		public Kontrahent Kontrahenci1
		{
			get
			{
				return this._Kontrahenci1.Entity;
			}
			set
			{
				Kontrahent previousValue = this._Kontrahenci1.Entity;
				if (((previousValue != value) 
							|| (this._Kontrahenci1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kontrahenci1.Entity = null;
						previousValue.Kontrahents.Remove(this);
					}
					this._Kontrahenci1.Entity = value;
					if ((value != null))
					{
						value.Kontrahents.Add(this);
						this._IdKontrahentaNadrzednego = value.Id;
					}
					else
					{
						this._IdKontrahentaNadrzednego = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kontrahenci1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kompensatas(Kompensata entity)
		{
			this.SendPropertyChanging();
			entity.Kontrahent = this;
		}
		
		private void detach_Kompensatas(Kompensata entity)
		{
			this.SendPropertyChanging();
			entity.Kontrahent = null;
		}
		
		private void attach_Kontrahents(Kontrahent entity)
		{
			this.SendPropertyChanging();
			entity.Kontrahenci1 = this;
		}
		
		private void detach_Kontrahents(Kontrahent entity)
		{
			this.SendPropertyChanging();
			entity.Kontrahenci1 = null;
		}
		
		private void attach_FakturaZakupus(FakturaZakupu entity)
		{
			this.SendPropertyChanging();
			entity.Kontrahent = this;
		}
		
		private void detach_FakturaZakupus(FakturaZakupu entity)
		{
			this.SendPropertyChanging();
			entity.Kontrahent = null;
		}
		
		private void attach_FakturaSprzedazies(FakturaSprzedazy entity)
		{
			this.SendPropertyChanging();
			entity.Kontrahent = this;
		}
		
		private void detach_FakturaSprzedazies(FakturaSprzedazy entity)
		{
			this.SendPropertyChanging();
			entity.Kontrahent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZaplatyFakturSprzedazy")]
	public partial class ZaplataFakturySprzedazy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdFakturySprzedazy;
		
		private decimal _Kwota;
		
		private System.DateTime _DataZaplaty;
		
		private string _Opis;
		
		private EntityRef<FakturaSprzedazy> _FakturaSprzedazy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdFakturySprzedazyChanging(int value);
    partial void OnIdFakturySprzedazyChanged();
    partial void OnKwotaChanging(decimal value);
    partial void OnKwotaChanged();
    partial void OnDataZaplatyChanging(System.DateTime value);
    partial void OnDataZaplatyChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    #endregion
		
		public ZaplataFakturySprzedazy()
		{
			this._FakturaSprzedazy = default(EntityRef<FakturaSprzedazy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFakturySprzedazy", DbType="Int NOT NULL")]
		public int IdFakturySprzedazy
		{
			get
			{
				return this._IdFakturySprzedazy;
			}
			set
			{
				if ((this._IdFakturySprzedazy != value))
				{
					if (this._FakturaSprzedazy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFakturySprzedazyChanging(value);
					this.SendPropertyChanging();
					this._IdFakturySprzedazy = value;
					this.SendPropertyChanged("IdFakturySprzedazy");
					this.OnIdFakturySprzedazyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kwota", DbType="Decimal(16,2) NOT NULL")]
		public decimal Kwota
		{
			get
			{
				return this._Kwota;
			}
			set
			{
				if ((this._Kwota != value))
				{
					this.OnKwotaChanging(value);
					this.SendPropertyChanging();
					this._Kwota = value;
					this.SendPropertyChanged("Kwota");
					this.OnKwotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataZaplaty", DbType="Date NOT NULL")]
		public System.DateTime DataZaplaty
		{
			get
			{
				return this._DataZaplaty;
			}
			set
			{
				if ((this._DataZaplaty != value))
				{
					this.OnDataZaplatyChanging(value);
					this.SendPropertyChanging();
					this._DataZaplaty = value;
					this.SendPropertyChanged("DataZaplaty");
					this.OnDataZaplatyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NVarChar(1000)")]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FakturaSprzedazy_ZaplataFakturySprzedazy", Storage="_FakturaSprzedazy", ThisKey="IdFakturySprzedazy", OtherKey="Id", IsForeignKey=true)]
		public FakturaSprzedazy FakturaSprzedazy
		{
			get
			{
				return this._FakturaSprzedazy.Entity;
			}
			set
			{
				FakturaSprzedazy previousValue = this._FakturaSprzedazy.Entity;
				if (((previousValue != value) 
							|| (this._FakturaSprzedazy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FakturaSprzedazy.Entity = null;
						previousValue.ZaplataFakturySprzedazies.Remove(this);
					}
					this._FakturaSprzedazy.Entity = value;
					if ((value != null))
					{
						value.ZaplataFakturySprzedazies.Add(this);
						this._IdFakturySprzedazy = value.Id;
					}
					else
					{
						this._IdFakturySprzedazy = default(int);
					}
					this.SendPropertyChanged("FakturaSprzedazy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZaplatyFakturZakupu")]
	public partial class ZaplataFakturyZakupu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdFakturyZakupu;
		
		private decimal _Kwota;
		
		private System.DateTime _DataZaplaty;
		
		private string _Opis;
		
		private EntityRef<FakturaZakupu> _FakturaZakupu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdFakturyZakupuChanging(int value);
    partial void OnIdFakturyZakupuChanged();
    partial void OnKwotaChanging(decimal value);
    partial void OnKwotaChanged();
    partial void OnDataZaplatyChanging(System.DateTime value);
    partial void OnDataZaplatyChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    #endregion
		
		public ZaplataFakturyZakupu()
		{
			this._FakturaZakupu = default(EntityRef<FakturaZakupu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFakturyZakupu", DbType="Int NOT NULL")]
		public int IdFakturyZakupu
		{
			get
			{
				return this._IdFakturyZakupu;
			}
			set
			{
				if ((this._IdFakturyZakupu != value))
				{
					if (this._FakturaZakupu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFakturyZakupuChanging(value);
					this.SendPropertyChanging();
					this._IdFakturyZakupu = value;
					this.SendPropertyChanged("IdFakturyZakupu");
					this.OnIdFakturyZakupuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kwota", DbType="Decimal(16,2) NOT NULL")]
		public decimal Kwota
		{
			get
			{
				return this._Kwota;
			}
			set
			{
				if ((this._Kwota != value))
				{
					this.OnKwotaChanging(value);
					this.SendPropertyChanging();
					this._Kwota = value;
					this.SendPropertyChanged("Kwota");
					this.OnKwotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataZaplaty", DbType="Date NOT NULL")]
		public System.DateTime DataZaplaty
		{
			get
			{
				return this._DataZaplaty;
			}
			set
			{
				if ((this._DataZaplaty != value))
				{
					this.OnDataZaplatyChanging(value);
					this.SendPropertyChanging();
					this._DataZaplaty = value;
					this.SendPropertyChanged("DataZaplaty");
					this.OnDataZaplatyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NVarChar(1000)")]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FakturaZakupu_ZaplataFakturyZakupu", Storage="_FakturaZakupu", ThisKey="IdFakturyZakupu", OtherKey="Id", IsForeignKey=true)]
		public FakturaZakupu FakturaZakupu
		{
			get
			{
				return this._FakturaZakupu.Entity;
			}
			set
			{
				FakturaZakupu previousValue = this._FakturaZakupu.Entity;
				if (((previousValue != value) 
							|| (this._FakturaZakupu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FakturaZakupu.Entity = null;
						previousValue.ZaplataFakturyZakupus.Remove(this);
					}
					this._FakturaZakupu.Entity = value;
					if ((value != null))
					{
						value.ZaplataFakturyZakupus.Add(this);
						this._IdFakturyZakupu = value.Id;
					}
					else
					{
						this._IdFakturyZakupu = default(int);
					}
					this.SendPropertyChanged("FakturaZakupu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FakturyZakupu")]
	public partial class FakturaZakupu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdFirmy;
		
		private int _IdRoku;
		
		private string _NumerFaktury;
		
		private string _WlasnyNumerFaktury;
		
		private System.DateTime _DataFaktury;
		
		private System.DateTime _TerminPlatnosci;
		
		private string _Opis;
		
		private int _IdKontrahenta;
		
		private int _IdSposobuPlatnosci;
		
		private bool _CzyZaliczka;
		
		private System.Nullable<System.DateTime> _DataZakupu;
		
		private EntitySet<KompensataPowiazanie> _KompensataPowiazanies;
		
		private EntitySet<ZaplataFakturyZakupu> _ZaplataFakturyZakupus;
		
		private EntitySet<PozycjaFakturyZakupu> _PozycjaFakturyZakupus;
		
		private EntityRef<Firma> _Firma;
		
		private EntityRef<Kontrahent> _Kontrahent;
		
		private EntityRef<RokObrotowy> _RokObrotowy;
		
		private EntityRef<SposobPlatnosci> _SposobPlatnosci;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdFirmyChanging(int value);
    partial void OnIdFirmyChanged();
    partial void OnIdRokuChanging(int value);
    partial void OnIdRokuChanged();
    partial void OnNumerFakturyChanging(string value);
    partial void OnNumerFakturyChanged();
    partial void OnWlasnyNumerFakturyChanging(string value);
    partial void OnWlasnyNumerFakturyChanged();
    partial void OnDataFakturyChanging(System.DateTime value);
    partial void OnDataFakturyChanged();
    partial void OnTerminPlatnosciChanging(System.DateTime value);
    partial void OnTerminPlatnosciChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    partial void OnIdKontrahentaChanging(int value);
    partial void OnIdKontrahentaChanged();
    partial void OnIdSposobuPlatnosciChanging(int value);
    partial void OnIdSposobuPlatnosciChanged();
    partial void OnCzyZaliczkaChanging(bool value);
    partial void OnCzyZaliczkaChanged();
    partial void OnDataZakupuChanging(System.Nullable<System.DateTime> value);
    partial void OnDataZakupuChanged();
    #endregion
		
		public FakturaZakupu()
		{
			this._KompensataPowiazanies = new EntitySet<KompensataPowiazanie>(new Action<KompensataPowiazanie>(this.attach_KompensataPowiazanies), new Action<KompensataPowiazanie>(this.detach_KompensataPowiazanies));
			this._ZaplataFakturyZakupus = new EntitySet<ZaplataFakturyZakupu>(new Action<ZaplataFakturyZakupu>(this.attach_ZaplataFakturyZakupus), new Action<ZaplataFakturyZakupu>(this.detach_ZaplataFakturyZakupus));
			this._PozycjaFakturyZakupus = new EntitySet<PozycjaFakturyZakupu>(new Action<PozycjaFakturyZakupu>(this.attach_PozycjaFakturyZakupus), new Action<PozycjaFakturyZakupu>(this.detach_PozycjaFakturyZakupus));
			this._Firma = default(EntityRef<Firma>);
			this._Kontrahent = default(EntityRef<Kontrahent>);
			this._RokObrotowy = default(EntityRef<RokObrotowy>);
			this._SposobPlatnosci = default(EntityRef<SposobPlatnosci>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFirmy", DbType="Int NOT NULL")]
		public int IdFirmy
		{
			get
			{
				return this._IdFirmy;
			}
			set
			{
				if ((this._IdFirmy != value))
				{
					if (this._Firma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFirmyChanging(value);
					this.SendPropertyChanging();
					this._IdFirmy = value;
					this.SendPropertyChanged("IdFirmy");
					this.OnIdFirmyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRoku", DbType="Int NOT NULL")]
		public int IdRoku
		{
			get
			{
				return this._IdRoku;
			}
			set
			{
				if ((this._IdRoku != value))
				{
					if (this._RokObrotowy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdRokuChanging(value);
					this.SendPropertyChanging();
					this._IdRoku = value;
					this.SendPropertyChanged("IdRoku");
					this.OnIdRokuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerFaktury", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NumerFaktury
		{
			get
			{
				return this._NumerFaktury;
			}
			set
			{
				if ((this._NumerFaktury != value))
				{
					this.OnNumerFakturyChanging(value);
					this.SendPropertyChanging();
					this._NumerFaktury = value;
					this.SendPropertyChanged("NumerFaktury");
					this.OnNumerFakturyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WlasnyNumerFaktury", DbType="NVarChar(50)")]
		public string WlasnyNumerFaktury
		{
			get
			{
				return this._WlasnyNumerFaktury;
			}
			set
			{
				if ((this._WlasnyNumerFaktury != value))
				{
					this.OnWlasnyNumerFakturyChanging(value);
					this.SendPropertyChanging();
					this._WlasnyNumerFaktury = value;
					this.SendPropertyChanged("WlasnyNumerFaktury");
					this.OnWlasnyNumerFakturyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFaktury", DbType="Date NOT NULL")]
		public System.DateTime DataFaktury
		{
			get
			{
				return this._DataFaktury;
			}
			set
			{
				if ((this._DataFaktury != value))
				{
					this.OnDataFakturyChanging(value);
					this.SendPropertyChanging();
					this._DataFaktury = value;
					this.SendPropertyChanged("DataFaktury");
					this.OnDataFakturyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminPlatnosci", DbType="Date NOT NULL")]
		public System.DateTime TerminPlatnosci
		{
			get
			{
				return this._TerminPlatnosci;
			}
			set
			{
				if ((this._TerminPlatnosci != value))
				{
					this.OnTerminPlatnosciChanging(value);
					this.SendPropertyChanging();
					this._TerminPlatnosci = value;
					this.SendPropertyChanged("TerminPlatnosci");
					this.OnTerminPlatnosciChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NVarChar(1000)")]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKontrahenta", DbType="Int NOT NULL")]
		public int IdKontrahenta
		{
			get
			{
				return this._IdKontrahenta;
			}
			set
			{
				if ((this._IdKontrahenta != value))
				{
					if (this._Kontrahent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdKontrahentaChanging(value);
					this.SendPropertyChanging();
					this._IdKontrahenta = value;
					this.SendPropertyChanged("IdKontrahenta");
					this.OnIdKontrahentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSposobuPlatnosci", DbType="Int NOT NULL")]
		public int IdSposobuPlatnosci
		{
			get
			{
				return this._IdSposobuPlatnosci;
			}
			set
			{
				if ((this._IdSposobuPlatnosci != value))
				{
					if (this._SposobPlatnosci.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSposobuPlatnosciChanging(value);
					this.SendPropertyChanging();
					this._IdSposobuPlatnosci = value;
					this.SendPropertyChanged("IdSposobuPlatnosci");
					this.OnIdSposobuPlatnosciChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CzyZaliczka", DbType="Bit NOT NULL")]
		public bool CzyZaliczka
		{
			get
			{
				return this._CzyZaliczka;
			}
			set
			{
				if ((this._CzyZaliczka != value))
				{
					this.OnCzyZaliczkaChanging(value);
					this.SendPropertyChanging();
					this._CzyZaliczka = value;
					this.SendPropertyChanged("CzyZaliczka");
					this.OnCzyZaliczkaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataZakupu", DbType="Date")]
		public System.Nullable<System.DateTime> DataZakupu
		{
			get
			{
				return this._DataZakupu;
			}
			set
			{
				if ((this._DataZakupu != value))
				{
					this.OnDataZakupuChanging(value);
					this.SendPropertyChanging();
					this._DataZakupu = value;
					this.SendPropertyChanged("DataZakupu");
					this.OnDataZakupuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FakturaZakupu_KompensataPowiazanie", Storage="_KompensataPowiazanies", ThisKey="Id,IdKontrahenta", OtherKey="IdFakturyZakupu,IdKontrahenta")]
		public EntitySet<KompensataPowiazanie> KompensataPowiazanies
		{
			get
			{
				return this._KompensataPowiazanies;
			}
			set
			{
				this._KompensataPowiazanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FakturaZakupu_ZaplataFakturyZakupu", Storage="_ZaplataFakturyZakupus", ThisKey="Id", OtherKey="IdFakturyZakupu")]
		public EntitySet<ZaplataFakturyZakupu> ZaplataFakturyZakupus
		{
			get
			{
				return this._ZaplataFakturyZakupus;
			}
			set
			{
				this._ZaplataFakturyZakupus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FakturaZakupu_PozycjaFakturyZakupu", Storage="_PozycjaFakturyZakupus", ThisKey="Id", OtherKey="IdFaktury")]
		public EntitySet<PozycjaFakturyZakupu> PozycjaFakturyZakupus
		{
			get
			{
				return this._PozycjaFakturyZakupus;
			}
			set
			{
				this._PozycjaFakturyZakupus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Firma_FakturaZakupu", Storage="_Firma", ThisKey="IdFirmy", OtherKey="Id", IsForeignKey=true)]
		public Firma Firma
		{
			get
			{
				return this._Firma.Entity;
			}
			set
			{
				Firma previousValue = this._Firma.Entity;
				if (((previousValue != value) 
							|| (this._Firma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Firma.Entity = null;
						previousValue.FakturaZakupus.Remove(this);
					}
					this._Firma.Entity = value;
					if ((value != null))
					{
						value.FakturaZakupus.Add(this);
						this._IdFirmy = value.Id;
					}
					else
					{
						this._IdFirmy = default(int);
					}
					this.SendPropertyChanged("Firma");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kontrahent_FakturaZakupu", Storage="_Kontrahent", ThisKey="IdKontrahenta", OtherKey="Id", IsForeignKey=true)]
		public Kontrahent Kontrahent
		{
			get
			{
				return this._Kontrahent.Entity;
			}
			set
			{
				Kontrahent previousValue = this._Kontrahent.Entity;
				if (((previousValue != value) 
							|| (this._Kontrahent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kontrahent.Entity = null;
						previousValue.FakturaZakupus.Remove(this);
					}
					this._Kontrahent.Entity = value;
					if ((value != null))
					{
						value.FakturaZakupus.Add(this);
						this._IdKontrahenta = value.Id;
					}
					else
					{
						this._IdKontrahenta = default(int);
					}
					this.SendPropertyChanged("Kontrahent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RokObrotowy_FakturaZakupu", Storage="_RokObrotowy", ThisKey="IdRoku", OtherKey="Id", IsForeignKey=true)]
		public RokObrotowy RokObrotowy
		{
			get
			{
				return this._RokObrotowy.Entity;
			}
			set
			{
				RokObrotowy previousValue = this._RokObrotowy.Entity;
				if (((previousValue != value) 
							|| (this._RokObrotowy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RokObrotowy.Entity = null;
						previousValue.FakturaZakupus.Remove(this);
					}
					this._RokObrotowy.Entity = value;
					if ((value != null))
					{
						value.FakturaZakupus.Add(this);
						this._IdRoku = value.Id;
					}
					else
					{
						this._IdRoku = default(int);
					}
					this.SendPropertyChanged("RokObrotowy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SposobPlatnosci_FakturaZakupu", Storage="_SposobPlatnosci", ThisKey="IdSposobuPlatnosci", OtherKey="Id", IsForeignKey=true)]
		public SposobPlatnosci SposobPlatnosci
		{
			get
			{
				return this._SposobPlatnosci.Entity;
			}
			set
			{
				SposobPlatnosci previousValue = this._SposobPlatnosci.Entity;
				if (((previousValue != value) 
							|| (this._SposobPlatnosci.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SposobPlatnosci.Entity = null;
						previousValue.FakturaZakupus.Remove(this);
					}
					this._SposobPlatnosci.Entity = value;
					if ((value != null))
					{
						value.FakturaZakupus.Add(this);
						this._IdSposobuPlatnosci = value.Id;
					}
					else
					{
						this._IdSposobuPlatnosci = default(int);
					}
					this.SendPropertyChanged("SposobPlatnosci");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KompensataPowiazanies(KompensataPowiazanie entity)
		{
			this.SendPropertyChanging();
			entity.FakturaZakupu = this;
		}
		
		private void detach_KompensataPowiazanies(KompensataPowiazanie entity)
		{
			this.SendPropertyChanging();
			entity.FakturaZakupu = null;
		}
		
		private void attach_ZaplataFakturyZakupus(ZaplataFakturyZakupu entity)
		{
			this.SendPropertyChanging();
			entity.FakturaZakupu = this;
		}
		
		private void detach_ZaplataFakturyZakupus(ZaplataFakturyZakupu entity)
		{
			this.SendPropertyChanging();
			entity.FakturaZakupu = null;
		}
		
		private void attach_PozycjaFakturyZakupus(PozycjaFakturyZakupu entity)
		{
			this.SendPropertyChanging();
			entity.FakturaZakupu = this;
		}
		
		private void detach_PozycjaFakturyZakupus(PozycjaFakturyZakupu entity)
		{
			this.SendPropertyChanging();
			entity.FakturaZakupu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnalizaRozrachunkow_vw")]
	public partial class AnalizaRozrachunku
	{
		
		private string _Key;
		
		private int _IdFirmy;
		
		private int _IdRoku;
		
		private int _IdKontrahenta;
		
		private string _KodKontrahenta;
		
		private string _NumerFaktury;
		
		private System.DateTime _DataFaktury;
		
		private System.DateTime _TerminPlatnosci;
		
		private System.Nullable<decimal> _Wn;
		
		private System.Nullable<decimal> _Ma;
		
		public AnalizaRozrachunku()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="NVarChar(32)")]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this._Key = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFirmy", DbType="Int NOT NULL")]
		public int IdFirmy
		{
			get
			{
				return this._IdFirmy;
			}
			set
			{
				if ((this._IdFirmy != value))
				{
					this._IdFirmy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRoku", DbType="Int NOT NULL")]
		public int IdRoku
		{
			get
			{
				return this._IdRoku;
			}
			set
			{
				if ((this._IdRoku != value))
				{
					this._IdRoku = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKontrahenta", DbType="Int NOT NULL")]
		public int IdKontrahenta
		{
			get
			{
				return this._IdKontrahenta;
			}
			set
			{
				if ((this._IdKontrahenta != value))
				{
					this._IdKontrahenta = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KodKontrahenta", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string KodKontrahenta
		{
			get
			{
				return this._KodKontrahenta;
			}
			set
			{
				if ((this._KodKontrahenta != value))
				{
					this._KodKontrahenta = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerFaktury", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NumerFaktury
		{
			get
			{
				return this._NumerFaktury;
			}
			set
			{
				if ((this._NumerFaktury != value))
				{
					this._NumerFaktury = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFaktury", DbType="Date NOT NULL")]
		public System.DateTime DataFaktury
		{
			get
			{
				return this._DataFaktury;
			}
			set
			{
				if ((this._DataFaktury != value))
				{
					this._DataFaktury = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminPlatnosci", DbType="Date NOT NULL")]
		public System.DateTime TerminPlatnosci
		{
			get
			{
				return this._TerminPlatnosci;
			}
			set
			{
				if ((this._TerminPlatnosci != value))
				{
					this._TerminPlatnosci = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wn", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> Wn
		{
			get
			{
				return this._Wn;
			}
			set
			{
				if ((this._Wn != value))
				{
					this._Wn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> Ma
		{
			get
			{
				return this._Ma;
			}
			set
			{
				if ((this._Ma != value))
				{
					this._Ma = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypyInwestycji")]
	public partial class TypInwestycji : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _KodTypuInwestycji;
		
		private string _NazwaTypuInwestycji;
		
		private bool _CzyDomyslny;
		
		private EntitySet<Inwestycja> _Inwestycjas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnKodTypuInwestycjiChanging(string value);
    partial void OnKodTypuInwestycjiChanged();
    partial void OnNazwaTypuInwestycjiChanging(string value);
    partial void OnNazwaTypuInwestycjiChanged();
    partial void OnCzyDomyslnyChanging(bool value);
    partial void OnCzyDomyslnyChanged();
    #endregion
		
		public TypInwestycji()
		{
			this._Inwestycjas = new EntitySet<Inwestycja>(new Action<Inwestycja>(this.attach_Inwestycjas), new Action<Inwestycja>(this.detach_Inwestycjas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KodTypuInwestycji", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string KodTypuInwestycji
		{
			get
			{
				return this._KodTypuInwestycji;
			}
			set
			{
				if ((this._KodTypuInwestycji != value))
				{
					this.OnKodTypuInwestycjiChanging(value);
					this.SendPropertyChanging();
					this._KodTypuInwestycji = value;
					this.SendPropertyChanged("KodTypuInwestycji");
					this.OnKodTypuInwestycjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NazwaTypuInwestycji", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string NazwaTypuInwestycji
		{
			get
			{
				return this._NazwaTypuInwestycji;
			}
			set
			{
				if ((this._NazwaTypuInwestycji != value))
				{
					this.OnNazwaTypuInwestycjiChanging(value);
					this.SendPropertyChanging();
					this._NazwaTypuInwestycji = value;
					this.SendPropertyChanged("NazwaTypuInwestycji");
					this.OnNazwaTypuInwestycjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CzyDomyslny", DbType="Bit NOT NULL")]
		public bool CzyDomyslny
		{
			get
			{
				return this._CzyDomyslny;
			}
			set
			{
				if ((this._CzyDomyslny != value))
				{
					this.OnCzyDomyslnyChanging(value);
					this.SendPropertyChanging();
					this._CzyDomyslny = value;
					this.SendPropertyChanged("CzyDomyslny");
					this.OnCzyDomyslnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypInwestycji_Inwestycja", Storage="_Inwestycjas", ThisKey="Id", OtherKey="IdTypuInwestycji")]
		public EntitySet<Inwestycja> Inwestycjas
		{
			get
			{
				return this._Inwestycjas;
			}
			set
			{
				this._Inwestycjas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Inwestycjas(Inwestycja entity)
		{
			this.SendPropertyChanging();
			entity.TypInwestycji = this;
		}
		
		private void detach_Inwestycjas(Inwestycja entity)
		{
			this.SendPropertyChanging();
			entity.TypInwestycji = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KosztyNaInwestycjach")]
	public partial class KosztNaInwestycjach
	{
		
		private int _IdFirmy;
		
		private int _IdRoku;
		
		private int _IdInwestycji;
		
		private string _NumerInwestycji;
		
		private int _IdTypuInwestycji;
		
		private string _KodTypuInwestycji;
		
		private string _NumerFaktury;
		
		private System.DateTime _DataFaktury;
		
		private string _WlasnyNumerFaktury;
		
		private int _IdKontrahenta;
		
		private string _KodKontrahenta;
		
		private string _NazwaKontrahenta;
		
		private string _Opis;
		
		private System.Nullable<decimal> _KwotaNetto;
		
		private System.Nullable<decimal> _KwotaVat;
		
		private System.Nullable<decimal> _KwotaBrutto;
		
		public KosztNaInwestycjach()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFirmy", DbType="Int NOT NULL")]
		public int IdFirmy
		{
			get
			{
				return this._IdFirmy;
			}
			set
			{
				if ((this._IdFirmy != value))
				{
					this._IdFirmy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRoku", DbType="Int NOT NULL")]
		public int IdRoku
		{
			get
			{
				return this._IdRoku;
			}
			set
			{
				if ((this._IdRoku != value))
				{
					this._IdRoku = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdInwestycji", DbType="Int NOT NULL")]
		public int IdInwestycji
		{
			get
			{
				return this._IdInwestycji;
			}
			set
			{
				if ((this._IdInwestycji != value))
				{
					this._IdInwestycji = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerInwestycji", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string NumerInwestycji
		{
			get
			{
				return this._NumerInwestycji;
			}
			set
			{
				if ((this._NumerInwestycji != value))
				{
					this._NumerInwestycji = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypuInwestycji", DbType="Int NOT NULL")]
		public int IdTypuInwestycji
		{
			get
			{
				return this._IdTypuInwestycji;
			}
			set
			{
				if ((this._IdTypuInwestycji != value))
				{
					this._IdTypuInwestycji = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KodTypuInwestycji", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string KodTypuInwestycji
		{
			get
			{
				return this._KodTypuInwestycji;
			}
			set
			{
				if ((this._KodTypuInwestycji != value))
				{
					this._KodTypuInwestycji = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerFaktury", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NumerFaktury
		{
			get
			{
				return this._NumerFaktury;
			}
			set
			{
				if ((this._NumerFaktury != value))
				{
					this._NumerFaktury = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFaktury", DbType="Date NOT NULL")]
		public System.DateTime DataFaktury
		{
			get
			{
				return this._DataFaktury;
			}
			set
			{
				if ((this._DataFaktury != value))
				{
					this._DataFaktury = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WlasnyNumerFaktury", DbType="NVarChar(50)")]
		public string WlasnyNumerFaktury
		{
			get
			{
				return this._WlasnyNumerFaktury;
			}
			set
			{
				if ((this._WlasnyNumerFaktury != value))
				{
					this._WlasnyNumerFaktury = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKontrahenta", DbType="Int NOT NULL")]
		public int IdKontrahenta
		{
			get
			{
				return this._IdKontrahenta;
			}
			set
			{
				if ((this._IdKontrahenta != value))
				{
					this._IdKontrahenta = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KodKontrahenta", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string KodKontrahenta
		{
			get
			{
				return this._KodKontrahenta;
			}
			set
			{
				if ((this._KodKontrahenta != value))
				{
					this._KodKontrahenta = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NazwaKontrahenta", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string NazwaKontrahenta
		{
			get
			{
				return this._NazwaKontrahenta;
			}
			set
			{
				if ((this._NazwaKontrahenta != value))
				{
					this._NazwaKontrahenta = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NVarChar(1000)")]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this._Opis = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KwotaNetto", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> KwotaNetto
		{
			get
			{
				return this._KwotaNetto;
			}
			set
			{
				if ((this._KwotaNetto != value))
				{
					this._KwotaNetto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KwotaVat", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> KwotaVat
		{
			get
			{
				return this._KwotaVat;
			}
			set
			{
				if ((this._KwotaVat != value))
				{
					this._KwotaVat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KwotaBrutto", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> KwotaBrutto
		{
			get
			{
				return this._KwotaBrutto;
			}
			set
			{
				if ((this._KwotaBrutto != value))
				{
					this._KwotaBrutto = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inwestycje")]
	public partial class Inwestycja : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdFirmy;
		
		private string _NumerInwestycji;
		
		private string _NumerUmowy;
		
		private System.Nullable<bool> _CzyDomyslny;
		
		private int _IdTypuInwestycji;
		
		private string _Opis;
		
		private EntitySet<FakturaSprzedazy> _FakturaSprzedazies;
		
		private EntitySet<PozycjaFakturyZakupu> _PozycjaFakturyZakupus;
		
		private EntityRef<Firma> _Firma;
		
		private EntityRef<TypInwestycji> _TypInwestycji;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdFirmyChanging(int value);
    partial void OnIdFirmyChanged();
    partial void OnNumerInwestycjiChanging(string value);
    partial void OnNumerInwestycjiChanged();
    partial void OnNumerUmowyChanging(string value);
    partial void OnNumerUmowyChanged();
    partial void OnCzyDomyslnyChanging(System.Nullable<bool> value);
    partial void OnCzyDomyslnyChanged();
    partial void OnIdTypuInwestycjiChanging(int value);
    partial void OnIdTypuInwestycjiChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    #endregion
		
		public Inwestycja()
		{
			this._FakturaSprzedazies = new EntitySet<FakturaSprzedazy>(new Action<FakturaSprzedazy>(this.attach_FakturaSprzedazies), new Action<FakturaSprzedazy>(this.detach_FakturaSprzedazies));
			this._PozycjaFakturyZakupus = new EntitySet<PozycjaFakturyZakupu>(new Action<PozycjaFakturyZakupu>(this.attach_PozycjaFakturyZakupus), new Action<PozycjaFakturyZakupu>(this.detach_PozycjaFakturyZakupus));
			this._Firma = default(EntityRef<Firma>);
			this._TypInwestycji = default(EntityRef<TypInwestycji>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFirmy", DbType="Int NOT NULL")]
		public int IdFirmy
		{
			get
			{
				return this._IdFirmy;
			}
			set
			{
				if ((this._IdFirmy != value))
				{
					if (this._Firma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFirmyChanging(value);
					this.SendPropertyChanging();
					this._IdFirmy = value;
					this.SendPropertyChanged("IdFirmy");
					this.OnIdFirmyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerInwestycji", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string NumerInwestycji
		{
			get
			{
				return this._NumerInwestycji;
			}
			set
			{
				if ((this._NumerInwestycji != value))
				{
					this.OnNumerInwestycjiChanging(value);
					this.SendPropertyChanging();
					this._NumerInwestycji = value;
					this.SendPropertyChanged("NumerInwestycji");
					this.OnNumerInwestycjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerUmowy", DbType="NVarChar(300)")]
		public string NumerUmowy
		{
			get
			{
				return this._NumerUmowy;
			}
			set
			{
				if ((this._NumerUmowy != value))
				{
					this.OnNumerUmowyChanging(value);
					this.SendPropertyChanging();
					this._NumerUmowy = value;
					this.SendPropertyChanged("NumerUmowy");
					this.OnNumerUmowyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CzyDomyslny", DbType="Bit")]
		public System.Nullable<bool> CzyDomyslny
		{
			get
			{
				return this._CzyDomyslny;
			}
			set
			{
				if ((this._CzyDomyslny != value))
				{
					this.OnCzyDomyslnyChanging(value);
					this.SendPropertyChanging();
					this._CzyDomyslny = value;
					this.SendPropertyChanged("CzyDomyslny");
					this.OnCzyDomyslnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypuInwestycji", DbType="Int NOT NULL")]
		public int IdTypuInwestycji
		{
			get
			{
				return this._IdTypuInwestycji;
			}
			set
			{
				if ((this._IdTypuInwestycji != value))
				{
					if (this._TypInwestycji.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTypuInwestycjiChanging(value);
					this.SendPropertyChanging();
					this._IdTypuInwestycji = value;
					this.SendPropertyChanged("IdTypuInwestycji");
					this.OnIdTypuInwestycjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NVarChar(1000)")]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inwestycja_FakturaSprzedazy", Storage="_FakturaSprzedazies", ThisKey="Id", OtherKey="IdInwestycji")]
		public EntitySet<FakturaSprzedazy> FakturaSprzedazies
		{
			get
			{
				return this._FakturaSprzedazies;
			}
			set
			{
				this._FakturaSprzedazies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inwestycja_PozycjaFakturyZakupu", Storage="_PozycjaFakturyZakupus", ThisKey="Id", OtherKey="IdInwestycji")]
		public EntitySet<PozycjaFakturyZakupu> PozycjaFakturyZakupus
		{
			get
			{
				return this._PozycjaFakturyZakupus;
			}
			set
			{
				this._PozycjaFakturyZakupus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Firma_Inwestycja", Storage="_Firma", ThisKey="IdFirmy", OtherKey="Id", IsForeignKey=true)]
		public Firma Firma
		{
			get
			{
				return this._Firma.Entity;
			}
			set
			{
				Firma previousValue = this._Firma.Entity;
				if (((previousValue != value) 
							|| (this._Firma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Firma.Entity = null;
						previousValue.Inwestycjas.Remove(this);
					}
					this._Firma.Entity = value;
					if ((value != null))
					{
						value.Inwestycjas.Add(this);
						this._IdFirmy = value.Id;
					}
					else
					{
						this._IdFirmy = default(int);
					}
					this.SendPropertyChanged("Firma");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypInwestycji_Inwestycja", Storage="_TypInwestycji", ThisKey="IdTypuInwestycji", OtherKey="Id", IsForeignKey=true)]
		public TypInwestycji TypInwestycji
		{
			get
			{
				return this._TypInwestycji.Entity;
			}
			set
			{
				TypInwestycji previousValue = this._TypInwestycji.Entity;
				if (((previousValue != value) 
							|| (this._TypInwestycji.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TypInwestycji.Entity = null;
						previousValue.Inwestycjas.Remove(this);
					}
					this._TypInwestycji.Entity = value;
					if ((value != null))
					{
						value.Inwestycjas.Add(this);
						this._IdTypuInwestycji = value.Id;
					}
					else
					{
						this._IdTypuInwestycji = default(int);
					}
					this.SendPropertyChanged("TypInwestycji");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FakturaSprzedazies(FakturaSprzedazy entity)
		{
			this.SendPropertyChanging();
			entity.Inwestycja = this;
		}
		
		private void detach_FakturaSprzedazies(FakturaSprzedazy entity)
		{
			this.SendPropertyChanging();
			entity.Inwestycja = null;
		}
		
		private void attach_PozycjaFakturyZakupus(PozycjaFakturyZakupu entity)
		{
			this.SendPropertyChanging();
			entity.Inwestycja = this;
		}
		
		private void detach_PozycjaFakturyZakupus(PozycjaFakturyZakupu entity)
		{
			this.SendPropertyChanging();
			entity.Inwestycja = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FakturySprzedazy")]
	public partial class FakturaSprzedazy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdFirmy;
		
		private int _IdRoku;
		
		private string _NumerFaktury;
		
		private System.DateTime _DataFaktury;
		
		private System.DateTime _TerminPlatnosci;
		
		private string _Opis;
		
		private int _IdKontrahenta;
		
		private bool _CzyZaliczka;
		
		private System.Nullable<int> _IdInwestycji;
		
		private int _IdKontaBankowegoFirmy;
		
		private int _IdSposobuPlatnosci;
		
		private System.Nullable<System.DateTime> _DataSprzedazy;
		
		private bool _CzyUmowa;
		
		private System.Nullable<int> _IdFakturyKorygujacej;
		
		private string _Uwagi;
		
		private EntitySet<KompensataPowiazanie> _KompensataPowiazanies;
		
		private EntitySet<ZaplataFakturySprzedazy> _ZaplataFakturySprzedazies;
		
		private EntitySet<FakturaSprzedazy> _FakturaKorygowana;
		
		private EntitySet<PozycjaFakturySprzedazy> _PozycjaFakturySprzedazies;
		
		private EntityRef<FakturaSprzedazy> _FakturaKorygujaca;
		
		private EntityRef<Firma> _Firma;
		
		private EntityRef<Inwestycja> _Inwestycja;
		
		private EntityRef<KontoBankowe> _KontoBankowe;
		
		private EntityRef<Kontrahent> _Kontrahent;
		
		private EntityRef<RokObrotowy> _RokObrotowy;
		
		private EntityRef<SposobPlatnosci> _SposobPlatnosci;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdFirmyChanging(int value);
    partial void OnIdFirmyChanged();
    partial void OnIdRokuChanging(int value);
    partial void OnIdRokuChanged();
    partial void OnNumerFakturyChanging(string value);
    partial void OnNumerFakturyChanged();
    partial void OnDataFakturyChanging(System.DateTime value);
    partial void OnDataFakturyChanged();
    partial void OnTerminPlatnosciChanging(System.DateTime value);
    partial void OnTerminPlatnosciChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    partial void OnIdKontrahentaChanging(int value);
    partial void OnIdKontrahentaChanged();
    partial void OnCzyZaliczkaChanging(bool value);
    partial void OnCzyZaliczkaChanged();
    partial void OnIdInwestycjiChanging(System.Nullable<int> value);
    partial void OnIdInwestycjiChanged();
    partial void OnIdKontaBankowegoFirmyChanging(int value);
    partial void OnIdKontaBankowegoFirmyChanged();
    partial void OnIdSposobuPlatnosciChanging(int value);
    partial void OnIdSposobuPlatnosciChanged();
    partial void OnDataSprzedazyChanging(System.Nullable<System.DateTime> value);
    partial void OnDataSprzedazyChanged();
    partial void OnCzyUmowaChanging(bool value);
    partial void OnCzyUmowaChanged();
    partial void OnIdFakturyKorygujacejChanging(System.Nullable<int> value);
    partial void OnIdFakturyKorygujacejChanged();
    partial void OnUwagiChanging(string value);
    partial void OnUwagiChanged();
    #endregion
		
		public FakturaSprzedazy()
		{
			this._KompensataPowiazanies = new EntitySet<KompensataPowiazanie>(new Action<KompensataPowiazanie>(this.attach_KompensataPowiazanies), new Action<KompensataPowiazanie>(this.detach_KompensataPowiazanies));
			this._ZaplataFakturySprzedazies = new EntitySet<ZaplataFakturySprzedazy>(new Action<ZaplataFakturySprzedazy>(this.attach_ZaplataFakturySprzedazies), new Action<ZaplataFakturySprzedazy>(this.detach_ZaplataFakturySprzedazies));
			this._FakturaKorygowana = new EntitySet<FakturaSprzedazy>(new Action<FakturaSprzedazy>(this.attach_FakturaKorygowana), new Action<FakturaSprzedazy>(this.detach_FakturaKorygowana));
			this._PozycjaFakturySprzedazies = new EntitySet<PozycjaFakturySprzedazy>(new Action<PozycjaFakturySprzedazy>(this.attach_PozycjaFakturySprzedazies), new Action<PozycjaFakturySprzedazy>(this.detach_PozycjaFakturySprzedazies));
			this._FakturaKorygujaca = default(EntityRef<FakturaSprzedazy>);
			this._Firma = default(EntityRef<Firma>);
			this._Inwestycja = default(EntityRef<Inwestycja>);
			this._KontoBankowe = default(EntityRef<KontoBankowe>);
			this._Kontrahent = default(EntityRef<Kontrahent>);
			this._RokObrotowy = default(EntityRef<RokObrotowy>);
			this._SposobPlatnosci = default(EntityRef<SposobPlatnosci>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFirmy", DbType="Int NOT NULL")]
		public int IdFirmy
		{
			get
			{
				return this._IdFirmy;
			}
			set
			{
				if ((this._IdFirmy != value))
				{
					if ((this._Firma.HasLoadedOrAssignedValue || this._KontoBankowe.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFirmyChanging(value);
					this.SendPropertyChanging();
					this._IdFirmy = value;
					this.SendPropertyChanged("IdFirmy");
					this.OnIdFirmyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRoku", DbType="Int NOT NULL")]
		public int IdRoku
		{
			get
			{
				return this._IdRoku;
			}
			set
			{
				if ((this._IdRoku != value))
				{
					if (this._RokObrotowy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdRokuChanging(value);
					this.SendPropertyChanging();
					this._IdRoku = value;
					this.SendPropertyChanged("IdRoku");
					this.OnIdRokuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerFaktury", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NumerFaktury
		{
			get
			{
				return this._NumerFaktury;
			}
			set
			{
				if ((this._NumerFaktury != value))
				{
					this.OnNumerFakturyChanging(value);
					this.SendPropertyChanging();
					this._NumerFaktury = value;
					this.SendPropertyChanged("NumerFaktury");
					this.OnNumerFakturyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFaktury", DbType="Date NOT NULL")]
		public System.DateTime DataFaktury
		{
			get
			{
				return this._DataFaktury;
			}
			set
			{
				if ((this._DataFaktury != value))
				{
					this.OnDataFakturyChanging(value);
					this.SendPropertyChanging();
					this._DataFaktury = value;
					this.SendPropertyChanged("DataFaktury");
					this.OnDataFakturyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminPlatnosci", DbType="Date NOT NULL")]
		public System.DateTime TerminPlatnosci
		{
			get
			{
				return this._TerminPlatnosci;
			}
			set
			{
				if ((this._TerminPlatnosci != value))
				{
					this.OnTerminPlatnosciChanging(value);
					this.SendPropertyChanging();
					this._TerminPlatnosci = value;
					this.SendPropertyChanged("TerminPlatnosci");
					this.OnTerminPlatnosciChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NVarChar(1000)")]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKontrahenta", DbType="Int NOT NULL")]
		public int IdKontrahenta
		{
			get
			{
				return this._IdKontrahenta;
			}
			set
			{
				if ((this._IdKontrahenta != value))
				{
					if (this._Kontrahent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdKontrahentaChanging(value);
					this.SendPropertyChanging();
					this._IdKontrahenta = value;
					this.SendPropertyChanged("IdKontrahenta");
					this.OnIdKontrahentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CzyZaliczka", DbType="Bit NOT NULL")]
		public bool CzyZaliczka
		{
			get
			{
				return this._CzyZaliczka;
			}
			set
			{
				if ((this._CzyZaliczka != value))
				{
					this.OnCzyZaliczkaChanging(value);
					this.SendPropertyChanging();
					this._CzyZaliczka = value;
					this.SendPropertyChanged("CzyZaliczka");
					this.OnCzyZaliczkaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdInwestycji", DbType="Int")]
		public System.Nullable<int> IdInwestycji
		{
			get
			{
				return this._IdInwestycji;
			}
			set
			{
				if ((this._IdInwestycji != value))
				{
					if (this._Inwestycja.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdInwestycjiChanging(value);
					this.SendPropertyChanging();
					this._IdInwestycji = value;
					this.SendPropertyChanged("IdInwestycji");
					this.OnIdInwestycjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKontaBankowegoFirmy", DbType="Int NOT NULL")]
		public int IdKontaBankowegoFirmy
		{
			get
			{
				return this._IdKontaBankowegoFirmy;
			}
			set
			{
				if ((this._IdKontaBankowegoFirmy != value))
				{
					if (this._KontoBankowe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdKontaBankowegoFirmyChanging(value);
					this.SendPropertyChanging();
					this._IdKontaBankowegoFirmy = value;
					this.SendPropertyChanged("IdKontaBankowegoFirmy");
					this.OnIdKontaBankowegoFirmyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSposobuPlatnosci", DbType="Int NOT NULL")]
		public int IdSposobuPlatnosci
		{
			get
			{
				return this._IdSposobuPlatnosci;
			}
			set
			{
				if ((this._IdSposobuPlatnosci != value))
				{
					if (this._SposobPlatnosci.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSposobuPlatnosciChanging(value);
					this.SendPropertyChanging();
					this._IdSposobuPlatnosci = value;
					this.SendPropertyChanged("IdSposobuPlatnosci");
					this.OnIdSposobuPlatnosciChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSprzedazy", DbType="Date")]
		public System.Nullable<System.DateTime> DataSprzedazy
		{
			get
			{
				return this._DataSprzedazy;
			}
			set
			{
				if ((this._DataSprzedazy != value))
				{
					this.OnDataSprzedazyChanging(value);
					this.SendPropertyChanging();
					this._DataSprzedazy = value;
					this.SendPropertyChanged("DataSprzedazy");
					this.OnDataSprzedazyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CzyUmowa", DbType="Bit NOT NULL")]
		public bool CzyUmowa
		{
			get
			{
				return this._CzyUmowa;
			}
			set
			{
				if ((this._CzyUmowa != value))
				{
					this.OnCzyUmowaChanging(value);
					this.SendPropertyChanging();
					this._CzyUmowa = value;
					this.SendPropertyChanged("CzyUmowa");
					this.OnCzyUmowaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFakturyKorygujacej", DbType="Int")]
		public System.Nullable<int> IdFakturyKorygujacej
		{
			get
			{
				return this._IdFakturyKorygujacej;
			}
			set
			{
				if ((this._IdFakturyKorygujacej != value))
				{
					if (this._FakturaKorygujaca.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFakturyKorygujacejChanging(value);
					this.SendPropertyChanging();
					this._IdFakturyKorygujacej = value;
					this.SendPropertyChanged("IdFakturyKorygujacej");
					this.OnIdFakturyKorygujacejChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uwagi", DbType="NVarChar(1000)")]
		public string Uwagi
		{
			get
			{
				return this._Uwagi;
			}
			set
			{
				if ((this._Uwagi != value))
				{
					this.OnUwagiChanging(value);
					this.SendPropertyChanging();
					this._Uwagi = value;
					this.SendPropertyChanged("Uwagi");
					this.OnUwagiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FakturaSprzedazy_KompensataPowiazanie", Storage="_KompensataPowiazanies", ThisKey="Id,IdKontrahenta", OtherKey="IdFakturySprzedazy,IdKontrahenta")]
		public EntitySet<KompensataPowiazanie> KompensataPowiazanies
		{
			get
			{
				return this._KompensataPowiazanies;
			}
			set
			{
				this._KompensataPowiazanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FakturaSprzedazy_ZaplataFakturySprzedazy", Storage="_ZaplataFakturySprzedazies", ThisKey="Id", OtherKey="IdFakturySprzedazy")]
		public EntitySet<ZaplataFakturySprzedazy> ZaplataFakturySprzedazies
		{
			get
			{
				return this._ZaplataFakturySprzedazies;
			}
			set
			{
				this._ZaplataFakturySprzedazies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FakturaSprzedazy_FakturaSprzedazy", Storage="_FakturaKorygowana", ThisKey="Id", OtherKey="IdFakturyKorygujacej")]
		public EntitySet<FakturaSprzedazy> FakturaKorygowana
		{
			get
			{
				return this._FakturaKorygowana;
			}
			set
			{
				this._FakturaKorygowana.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FakturaSprzedazy_PozycjaFakturySprzedazy", Storage="_PozycjaFakturySprzedazies", ThisKey="Id", OtherKey="IdFaktury")]
		public EntitySet<PozycjaFakturySprzedazy> PozycjaFakturySprzedazies
		{
			get
			{
				return this._PozycjaFakturySprzedazies;
			}
			set
			{
				this._PozycjaFakturySprzedazies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FakturaSprzedazy_FakturaSprzedazy", Storage="_FakturaKorygujaca", ThisKey="IdFakturyKorygujacej", OtherKey="Id", IsForeignKey=true)]
		public FakturaSprzedazy FakturaKorygujaca
		{
			get
			{
				return this._FakturaKorygujaca.Entity;
			}
			set
			{
				FakturaSprzedazy previousValue = this._FakturaKorygujaca.Entity;
				if (((previousValue != value) 
							|| (this._FakturaKorygujaca.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FakturaKorygujaca.Entity = null;
						previousValue.FakturaKorygowana.Remove(this);
					}
					this._FakturaKorygujaca.Entity = value;
					if ((value != null))
					{
						value.FakturaKorygowana.Add(this);
						this._IdFakturyKorygujacej = value.Id;
					}
					else
					{
						this._IdFakturyKorygujacej = default(Nullable<int>);
					}
					this.SendPropertyChanged("FakturaKorygujaca");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Firma_FakturaSprzedazy", Storage="_Firma", ThisKey="IdFirmy", OtherKey="Id", IsForeignKey=true)]
		public Firma Firma
		{
			get
			{
				return this._Firma.Entity;
			}
			set
			{
				Firma previousValue = this._Firma.Entity;
				if (((previousValue != value) 
							|| (this._Firma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Firma.Entity = null;
						previousValue.FakturaSprzedazies.Remove(this);
					}
					this._Firma.Entity = value;
					if ((value != null))
					{
						value.FakturaSprzedazies.Add(this);
						this._IdFirmy = value.Id;
					}
					else
					{
						this._IdFirmy = default(int);
					}
					this.SendPropertyChanged("Firma");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inwestycja_FakturaSprzedazy", Storage="_Inwestycja", ThisKey="IdInwestycji", OtherKey="Id", IsForeignKey=true)]
		public Inwestycja Inwestycja
		{
			get
			{
				return this._Inwestycja.Entity;
			}
			set
			{
				Inwestycja previousValue = this._Inwestycja.Entity;
				if (((previousValue != value) 
							|| (this._Inwestycja.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inwestycja.Entity = null;
						previousValue.FakturaSprzedazies.Remove(this);
					}
					this._Inwestycja.Entity = value;
					if ((value != null))
					{
						value.FakturaSprzedazies.Add(this);
						this._IdInwestycji = value.Id;
					}
					else
					{
						this._IdInwestycji = default(Nullable<int>);
					}
					this.SendPropertyChanged("Inwestycja");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KontoBankowe_FakturaSprzedazy", Storage="_KontoBankowe", ThisKey="IdKontaBankowegoFirmy,IdFirmy", OtherKey="Id,IdFirmy", IsForeignKey=true)]
		public KontoBankowe KontoBankowe
		{
			get
			{
				return this._KontoBankowe.Entity;
			}
			set
			{
				KontoBankowe previousValue = this._KontoBankowe.Entity;
				if (((previousValue != value) 
							|| (this._KontoBankowe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KontoBankowe.Entity = null;
						previousValue.FakturaSprzedazies.Remove(this);
					}
					this._KontoBankowe.Entity = value;
					if ((value != null))
					{
						value.FakturaSprzedazies.Add(this);
						this._IdKontaBankowegoFirmy = value.Id;
						this._IdFirmy = value.IdFirmy;
					}
					else
					{
						this._IdKontaBankowegoFirmy = default(int);
						this._IdFirmy = default(int);
					}
					this.SendPropertyChanged("KontoBankowe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kontrahent_FakturaSprzedazy", Storage="_Kontrahent", ThisKey="IdKontrahenta", OtherKey="Id", IsForeignKey=true)]
		public Kontrahent Kontrahent
		{
			get
			{
				return this._Kontrahent.Entity;
			}
			set
			{
				Kontrahent previousValue = this._Kontrahent.Entity;
				if (((previousValue != value) 
							|| (this._Kontrahent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kontrahent.Entity = null;
						previousValue.FakturaSprzedazies.Remove(this);
					}
					this._Kontrahent.Entity = value;
					if ((value != null))
					{
						value.FakturaSprzedazies.Add(this);
						this._IdKontrahenta = value.Id;
					}
					else
					{
						this._IdKontrahenta = default(int);
					}
					this.SendPropertyChanged("Kontrahent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RokObrotowy_FakturaSprzedazy", Storage="_RokObrotowy", ThisKey="IdRoku", OtherKey="Id", IsForeignKey=true)]
		public RokObrotowy RokObrotowy
		{
			get
			{
				return this._RokObrotowy.Entity;
			}
			set
			{
				RokObrotowy previousValue = this._RokObrotowy.Entity;
				if (((previousValue != value) 
							|| (this._RokObrotowy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RokObrotowy.Entity = null;
						previousValue.FakturaSprzedazies.Remove(this);
					}
					this._RokObrotowy.Entity = value;
					if ((value != null))
					{
						value.FakturaSprzedazies.Add(this);
						this._IdRoku = value.Id;
					}
					else
					{
						this._IdRoku = default(int);
					}
					this.SendPropertyChanged("RokObrotowy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SposobPlatnosci_FakturaSprzedazy", Storage="_SposobPlatnosci", ThisKey="IdSposobuPlatnosci", OtherKey="Id", IsForeignKey=true)]
		public SposobPlatnosci SposobPlatnosci
		{
			get
			{
				return this._SposobPlatnosci.Entity;
			}
			set
			{
				SposobPlatnosci previousValue = this._SposobPlatnosci.Entity;
				if (((previousValue != value) 
							|| (this._SposobPlatnosci.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SposobPlatnosci.Entity = null;
						previousValue.FakturaSprzedazies.Remove(this);
					}
					this._SposobPlatnosci.Entity = value;
					if ((value != null))
					{
						value.FakturaSprzedazies.Add(this);
						this._IdSposobuPlatnosci = value.Id;
					}
					else
					{
						this._IdSposobuPlatnosci = default(int);
					}
					this.SendPropertyChanged("SposobPlatnosci");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KompensataPowiazanies(KompensataPowiazanie entity)
		{
			this.SendPropertyChanging();
			entity.FakturaSprzedazy = this;
		}
		
		private void detach_KompensataPowiazanies(KompensataPowiazanie entity)
		{
			this.SendPropertyChanging();
			entity.FakturaSprzedazy = null;
		}
		
		private void attach_ZaplataFakturySprzedazies(ZaplataFakturySprzedazy entity)
		{
			this.SendPropertyChanging();
			entity.FakturaSprzedazy = this;
		}
		
		private void detach_ZaplataFakturySprzedazies(ZaplataFakturySprzedazy entity)
		{
			this.SendPropertyChanging();
			entity.FakturaSprzedazy = null;
		}
		
		private void attach_FakturaKorygowana(FakturaSprzedazy entity)
		{
			this.SendPropertyChanging();
			entity.FakturaKorygujaca = this;
		}
		
		private void detach_FakturaKorygowana(FakturaSprzedazy entity)
		{
			this.SendPropertyChanging();
			entity.FakturaKorygujaca = null;
		}
		
		private void attach_PozycjaFakturySprzedazies(PozycjaFakturySprzedazy entity)
		{
			this.SendPropertyChanging();
			entity.FakturaSprzedazy = this;
		}
		
		private void detach_PozycjaFakturySprzedazies(PozycjaFakturySprzedazy entity)
		{
			this.SendPropertyChanging();
			entity.FakturaSprzedazy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NieuregulowaneFakturySprzedazy_vw")]
	public partial class NieuregulowanaFakturaSprzedazy
	{
		
		private int _Id;
		
		private int _IdFirmy;
		
		private int _IdRoku;
		
		private string _NumerFaktury;
		
		private System.DateTime _DataFaktury;
		
		private System.DateTime _TerminPlatnosci;
		
		private string _Opis;
		
		private int _IdKontrahenta;
		
		private decimal _KwotaZaplacona;
		
		private System.Nullable<int> _IdInwestycji;
		
		private System.Nullable<decimal> _KwotaNetto;
		
		private System.Nullable<decimal> _KwotaVat;
		
		private System.Nullable<decimal> _KwotaBrutto;
		
		private System.Nullable<decimal> _KwotaSkompensowana;
		
		private System.Nullable<decimal> _KwotaNieuregulowana;
		
		private string _KodKontrahenta;
		
		private string _NumerInwestycji;
		
		private string _NumerUmowy;
		
		private System.Nullable<int> _IdFakturyKorygujacej;
		
		public NieuregulowanaFakturaSprzedazy()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFirmy", DbType="Int NOT NULL")]
		public int IdFirmy
		{
			get
			{
				return this._IdFirmy;
			}
			set
			{
				if ((this._IdFirmy != value))
				{
					this._IdFirmy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRoku", DbType="Int NOT NULL")]
		public int IdRoku
		{
			get
			{
				return this._IdRoku;
			}
			set
			{
				if ((this._IdRoku != value))
				{
					this._IdRoku = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerFaktury", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NumerFaktury
		{
			get
			{
				return this._NumerFaktury;
			}
			set
			{
				if ((this._NumerFaktury != value))
				{
					this._NumerFaktury = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFaktury", DbType="Date NOT NULL")]
		public System.DateTime DataFaktury
		{
			get
			{
				return this._DataFaktury;
			}
			set
			{
				if ((this._DataFaktury != value))
				{
					this._DataFaktury = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminPlatnosci", DbType="Date NOT NULL")]
		public System.DateTime TerminPlatnosci
		{
			get
			{
				return this._TerminPlatnosci;
			}
			set
			{
				if ((this._TerminPlatnosci != value))
				{
					this._TerminPlatnosci = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NVarChar(1000)")]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this._Opis = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKontrahenta", DbType="Int NOT NULL")]
		public int IdKontrahenta
		{
			get
			{
				return this._IdKontrahenta;
			}
			set
			{
				if ((this._IdKontrahenta != value))
				{
					this._IdKontrahenta = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KwotaZaplacona", DbType="Decimal(38,2) NOT NULL")]
		public decimal KwotaZaplacona
		{
			get
			{
				return this._KwotaZaplacona;
			}
			set
			{
				if ((this._KwotaZaplacona != value))
				{
					this._KwotaZaplacona = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdInwestycji", DbType="Int")]
		public System.Nullable<int> IdInwestycji
		{
			get
			{
				return this._IdInwestycji;
			}
			set
			{
				if ((this._IdInwestycji != value))
				{
					this._IdInwestycji = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KwotaNetto", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> KwotaNetto
		{
			get
			{
				return this._KwotaNetto;
			}
			set
			{
				if ((this._KwotaNetto != value))
				{
					this._KwotaNetto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KwotaVat", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> KwotaVat
		{
			get
			{
				return this._KwotaVat;
			}
			set
			{
				if ((this._KwotaVat != value))
				{
					this._KwotaVat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KwotaBrutto", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> KwotaBrutto
		{
			get
			{
				return this._KwotaBrutto;
			}
			set
			{
				if ((this._KwotaBrutto != value))
				{
					this._KwotaBrutto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KwotaSkompensowana", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> KwotaSkompensowana
		{
			get
			{
				return this._KwotaSkompensowana;
			}
			set
			{
				if ((this._KwotaSkompensowana != value))
				{
					this._KwotaSkompensowana = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KwotaNieuregulowana", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> KwotaNieuregulowana
		{
			get
			{
				return this._KwotaNieuregulowana;
			}
			set
			{
				if ((this._KwotaNieuregulowana != value))
				{
					this._KwotaNieuregulowana = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KodKontrahenta", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string KodKontrahenta
		{
			get
			{
				return this._KodKontrahenta;
			}
			set
			{
				if ((this._KodKontrahenta != value))
				{
					this._KodKontrahenta = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerInwestycji", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string NumerInwestycji
		{
			get
			{
				return this._NumerInwestycji;
			}
			set
			{
				if ((this._NumerInwestycji != value))
				{
					this._NumerInwestycji = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerUmowy", DbType="NVarChar(300)")]
		public string NumerUmowy
		{
			get
			{
				return this._NumerUmowy;
			}
			set
			{
				if ((this._NumerUmowy != value))
				{
					this._NumerUmowy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFakturyKorygujacej", DbType="Int")]
		public System.Nullable<int> IdFakturyKorygujacej
		{
			get
			{
				return this._IdFakturyKorygujacej;
			}
			set
			{
				if ((this._IdFakturyKorygujacej != value))
				{
					this._IdFakturyKorygujacej = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PozycjeFakturSprzedazy")]
	public partial class PozycjaFakturySprzedazy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _NumerPozycji;
		
		private int _IdFaktury;
		
		private decimal _CenaJednostkowa;
		
		private int _StawkaVat;
		
		private string _Opis;
		
		private int _IdJednostkiMiary;
		
		private int _Ilosc;
		
		private bool _CzyBrutto;
		
		private EntityRef<FakturaSprzedazy> _FakturaSprzedazy;
		
		private EntityRef<JednostkaMiary> _JednostkaMiary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNumerPozycjiChanging(int value);
    partial void OnNumerPozycjiChanged();
    partial void OnIdFakturyChanging(int value);
    partial void OnIdFakturyChanged();
    partial void OnCenaJednostkowaChanging(decimal value);
    partial void OnCenaJednostkowaChanged();
    partial void OnStawkaVatChanging(int value);
    partial void OnStawkaVatChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    partial void OnIdJednostkiMiaryChanging(int value);
    partial void OnIdJednostkiMiaryChanged();
    partial void OnIloscChanging(int value);
    partial void OnIloscChanged();
    partial void OnCzyBruttoChanging(bool value);
    partial void OnCzyBruttoChanged();
    #endregion
		
		public PozycjaFakturySprzedazy()
		{
			this._FakturaSprzedazy = default(EntityRef<FakturaSprzedazy>);
			this._JednostkaMiary = default(EntityRef<JednostkaMiary>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerPozycji", DbType="Int NOT NULL")]
		public int NumerPozycji
		{
			get
			{
				return this._NumerPozycji;
			}
			set
			{
				if ((this._NumerPozycji != value))
				{
					this.OnNumerPozycjiChanging(value);
					this.SendPropertyChanging();
					this._NumerPozycji = value;
					this.SendPropertyChanged("NumerPozycji");
					this.OnNumerPozycjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFaktury", DbType="Int NOT NULL")]
		public int IdFaktury
		{
			get
			{
				return this._IdFaktury;
			}
			set
			{
				if ((this._IdFaktury != value))
				{
					if (this._FakturaSprzedazy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFakturyChanging(value);
					this.SendPropertyChanging();
					this._IdFaktury = value;
					this.SendPropertyChanged("IdFaktury");
					this.OnIdFakturyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenaJednostkowa", DbType="Decimal(16,2) NOT NULL")]
		public decimal CenaJednostkowa
		{
			get
			{
				return this._CenaJednostkowa;
			}
			set
			{
				if ((this._CenaJednostkowa != value))
				{
					this.OnCenaJednostkowaChanging(value);
					this.SendPropertyChanging();
					this._CenaJednostkowa = value;
					this.SendPropertyChanged("CenaJednostkowa");
					this.OnCenaJednostkowaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StawkaVat", DbType="Int NOT NULL")]
		public int StawkaVat
		{
			get
			{
				return this._StawkaVat;
			}
			set
			{
				if ((this._StawkaVat != value))
				{
					this.OnStawkaVatChanging(value);
					this.SendPropertyChanging();
					this._StawkaVat = value;
					this.SendPropertyChanged("StawkaVat");
					this.OnStawkaVatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NVarChar(1000)")]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdJednostkiMiary", DbType="Int NOT NULL")]
		public int IdJednostkiMiary
		{
			get
			{
				return this._IdJednostkiMiary;
			}
			set
			{
				if ((this._IdJednostkiMiary != value))
				{
					if (this._JednostkaMiary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdJednostkiMiaryChanging(value);
					this.SendPropertyChanging();
					this._IdJednostkiMiary = value;
					this.SendPropertyChanged("IdJednostkiMiary");
					this.OnIdJednostkiMiaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ilosc", DbType="Int NOT NULL")]
		public int Ilosc
		{
			get
			{
				return this._Ilosc;
			}
			set
			{
				if ((this._Ilosc != value))
				{
					this.OnIloscChanging(value);
					this.SendPropertyChanging();
					this._Ilosc = value;
					this.SendPropertyChanged("Ilosc");
					this.OnIloscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CzyBrutto", DbType="Bit NOT NULL")]
		public bool CzyBrutto
		{
			get
			{
				return this._CzyBrutto;
			}
			set
			{
				if ((this._CzyBrutto != value))
				{
					this.OnCzyBruttoChanging(value);
					this.SendPropertyChanging();
					this._CzyBrutto = value;
					this.SendPropertyChanged("CzyBrutto");
					this.OnCzyBruttoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FakturaSprzedazy_PozycjaFakturySprzedazy", Storage="_FakturaSprzedazy", ThisKey="IdFaktury", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FakturaSprzedazy FakturaSprzedazy
		{
			get
			{
				return this._FakturaSprzedazy.Entity;
			}
			set
			{
				FakturaSprzedazy previousValue = this._FakturaSprzedazy.Entity;
				if (((previousValue != value) 
							|| (this._FakturaSprzedazy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FakturaSprzedazy.Entity = null;
						previousValue.PozycjaFakturySprzedazies.Remove(this);
					}
					this._FakturaSprzedazy.Entity = value;
					if ((value != null))
					{
						value.PozycjaFakturySprzedazies.Add(this);
						this._IdFaktury = value.Id;
					}
					else
					{
						this._IdFaktury = default(int);
					}
					this.SendPropertyChanged("FakturaSprzedazy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JednostkaMiary_PozycjaFakturySprzedazy", Storage="_JednostkaMiary", ThisKey="IdJednostkiMiary", OtherKey="Id", IsForeignKey=true)]
		public JednostkaMiary JednostkaMiary
		{
			get
			{
				return this._JednostkaMiary.Entity;
			}
			set
			{
				JednostkaMiary previousValue = this._JednostkaMiary.Entity;
				if (((previousValue != value) 
							|| (this._JednostkaMiary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JednostkaMiary.Entity = null;
						previousValue.PozycjaFakturySprzedazies.Remove(this);
					}
					this._JednostkaMiary.Entity = value;
					if ((value != null))
					{
						value.PozycjaFakturySprzedazies.Add(this);
						this._IdJednostkiMiary = value.Id;
					}
					else
					{
						this._IdJednostkiMiary = default(int);
					}
					this.SendPropertyChanged("JednostkaMiary");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PozycjeFakturZakupu")]
	public partial class PozycjaFakturyZakupu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _NumerPozycji;
		
		private int _IdFaktury;
		
		private decimal _CenaJednostkowa;
		
		private int _StawkaVat;
		
		private int _IdInwestycji;
		
		private string _Opis;
		
		private int _Ilosc;
		
		private int _IdJednostkiMiary;
		
		private bool _CzyBrutto;
		
		private EntityRef<FakturaZakupu> _FakturaZakupu;
		
		private EntityRef<Inwestycja> _Inwestycja;
		
		private EntityRef<JednostkaMiary> _JednostkaMiary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNumerPozycjiChanging(int value);
    partial void OnNumerPozycjiChanged();
    partial void OnIdFakturyChanging(int value);
    partial void OnIdFakturyChanged();
    partial void OnCenaJednostkowaChanging(decimal value);
    partial void OnCenaJednostkowaChanged();
    partial void OnStawkaVatChanging(int value);
    partial void OnStawkaVatChanged();
    partial void OnIdInwestycjiChanging(int value);
    partial void OnIdInwestycjiChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    partial void OnIloscChanging(int value);
    partial void OnIloscChanged();
    partial void OnIdJednostkiMiaryChanging(int value);
    partial void OnIdJednostkiMiaryChanged();
    partial void OnCzyBruttoChanging(bool value);
    partial void OnCzyBruttoChanged();
    #endregion
		
		public PozycjaFakturyZakupu()
		{
			this._FakturaZakupu = default(EntityRef<FakturaZakupu>);
			this._Inwestycja = default(EntityRef<Inwestycja>);
			this._JednostkaMiary = default(EntityRef<JednostkaMiary>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerPozycji", DbType="Int NOT NULL")]
		public int NumerPozycji
		{
			get
			{
				return this._NumerPozycji;
			}
			set
			{
				if ((this._NumerPozycji != value))
				{
					this.OnNumerPozycjiChanging(value);
					this.SendPropertyChanging();
					this._NumerPozycji = value;
					this.SendPropertyChanged("NumerPozycji");
					this.OnNumerPozycjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFaktury", DbType="Int NOT NULL")]
		public int IdFaktury
		{
			get
			{
				return this._IdFaktury;
			}
			set
			{
				if ((this._IdFaktury != value))
				{
					if (this._FakturaZakupu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFakturyChanging(value);
					this.SendPropertyChanging();
					this._IdFaktury = value;
					this.SendPropertyChanged("IdFaktury");
					this.OnIdFakturyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenaJednostkowa", DbType="Decimal(16,2) NOT NULL")]
		public decimal CenaJednostkowa
		{
			get
			{
				return this._CenaJednostkowa;
			}
			set
			{
				if ((this._CenaJednostkowa != value))
				{
					this.OnCenaJednostkowaChanging(value);
					this.SendPropertyChanging();
					this._CenaJednostkowa = value;
					this.SendPropertyChanged("CenaJednostkowa");
					this.OnCenaJednostkowaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StawkaVat", DbType="Int NOT NULL")]
		public int StawkaVat
		{
			get
			{
				return this._StawkaVat;
			}
			set
			{
				if ((this._StawkaVat != value))
				{
					this.OnStawkaVatChanging(value);
					this.SendPropertyChanging();
					this._StawkaVat = value;
					this.SendPropertyChanged("StawkaVat");
					this.OnStawkaVatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdInwestycji", DbType="Int NOT NULL")]
		public int IdInwestycji
		{
			get
			{
				return this._IdInwestycji;
			}
			set
			{
				if ((this._IdInwestycji != value))
				{
					if (this._Inwestycja.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdInwestycjiChanging(value);
					this.SendPropertyChanging();
					this._IdInwestycji = value;
					this.SendPropertyChanged("IdInwestycji");
					this.OnIdInwestycjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NVarChar(1000)")]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ilosc", DbType="Int NOT NULL")]
		public int Ilosc
		{
			get
			{
				return this._Ilosc;
			}
			set
			{
				if ((this._Ilosc != value))
				{
					this.OnIloscChanging(value);
					this.SendPropertyChanging();
					this._Ilosc = value;
					this.SendPropertyChanged("Ilosc");
					this.OnIloscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdJednostkiMiary", DbType="Int NOT NULL")]
		public int IdJednostkiMiary
		{
			get
			{
				return this._IdJednostkiMiary;
			}
			set
			{
				if ((this._IdJednostkiMiary != value))
				{
					if (this._JednostkaMiary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdJednostkiMiaryChanging(value);
					this.SendPropertyChanging();
					this._IdJednostkiMiary = value;
					this.SendPropertyChanged("IdJednostkiMiary");
					this.OnIdJednostkiMiaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CzyBrutto", DbType="Bit NOT NULL")]
		public bool CzyBrutto
		{
			get
			{
				return this._CzyBrutto;
			}
			set
			{
				if ((this._CzyBrutto != value))
				{
					this.OnCzyBruttoChanging(value);
					this.SendPropertyChanging();
					this._CzyBrutto = value;
					this.SendPropertyChanged("CzyBrutto");
					this.OnCzyBruttoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FakturaZakupu_PozycjaFakturyZakupu", Storage="_FakturaZakupu", ThisKey="IdFaktury", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FakturaZakupu FakturaZakupu
		{
			get
			{
				return this._FakturaZakupu.Entity;
			}
			set
			{
				FakturaZakupu previousValue = this._FakturaZakupu.Entity;
				if (((previousValue != value) 
							|| (this._FakturaZakupu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FakturaZakupu.Entity = null;
						previousValue.PozycjaFakturyZakupus.Remove(this);
					}
					this._FakturaZakupu.Entity = value;
					if ((value != null))
					{
						value.PozycjaFakturyZakupus.Add(this);
						this._IdFaktury = value.Id;
					}
					else
					{
						this._IdFaktury = default(int);
					}
					this.SendPropertyChanged("FakturaZakupu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inwestycja_PozycjaFakturyZakupu", Storage="_Inwestycja", ThisKey="IdInwestycji", OtherKey="Id", IsForeignKey=true)]
		public Inwestycja Inwestycja
		{
			get
			{
				return this._Inwestycja.Entity;
			}
			set
			{
				Inwestycja previousValue = this._Inwestycja.Entity;
				if (((previousValue != value) 
							|| (this._Inwestycja.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inwestycja.Entity = null;
						previousValue.PozycjaFakturyZakupus.Remove(this);
					}
					this._Inwestycja.Entity = value;
					if ((value != null))
					{
						value.PozycjaFakturyZakupus.Add(this);
						this._IdInwestycji = value.Id;
					}
					else
					{
						this._IdInwestycji = default(int);
					}
					this.SendPropertyChanged("Inwestycja");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JednostkaMiary_PozycjaFakturyZakupu", Storage="_JednostkaMiary", ThisKey="IdJednostkiMiary", OtherKey="Id", IsForeignKey=true)]
		public JednostkaMiary JednostkaMiary
		{
			get
			{
				return this._JednostkaMiary.Entity;
			}
			set
			{
				JednostkaMiary previousValue = this._JednostkaMiary.Entity;
				if (((previousValue != value) 
							|| (this._JednostkaMiary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JednostkaMiary.Entity = null;
						previousValue.PozycjaFakturyZakupus.Remove(this);
					}
					this._JednostkaMiary.Entity = value;
					if ((value != null))
					{
						value.PozycjaFakturyZakupus.Add(this);
						this._IdJednostkiMiary = value.Id;
					}
					else
					{
						this._IdJednostkiMiary = default(int);
					}
					this.SendPropertyChanged("JednostkaMiary");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Uzytkownicy")]
	public partial class Uzytkownik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private string _UserName;
		
		private string _Imie;
		
		private string _Nazwisko;
		
		private System.Nullable<int> _WybraneIdRoku;
		
		private System.Nullable<int> _WybraneIdFirmy;
		
		private EntitySet<webpages_UsersInRole> _webpages_UsersInRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnImieChanging(string value);
    partial void OnImieChanged();
    partial void OnNazwiskoChanging(string value);
    partial void OnNazwiskoChanged();
    partial void OnWybraneIdRokuChanging(System.Nullable<int> value);
    partial void OnWybraneIdRokuChanged();
    partial void OnWybraneIdFirmyChanging(System.Nullable<int> value);
    partial void OnWybraneIdFirmyChanged();
    #endregion
		
		public Uzytkownik()
		{
			this._webpages_UsersInRoles = new EntitySet<webpages_UsersInRole>(new Action<webpages_UsersInRole>(this.attach_webpages_UsersInRoles), new Action<webpages_UsersInRole>(this.detach_webpages_UsersInRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(56) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imie", DbType="NVarChar(50)")]
		public string Imie
		{
			get
			{
				return this._Imie;
			}
			set
			{
				if ((this._Imie != value))
				{
					this.OnImieChanging(value);
					this.SendPropertyChanging();
					this._Imie = value;
					this.SendPropertyChanged("Imie");
					this.OnImieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwisko", DbType="NVarChar(50)")]
		public string Nazwisko
		{
			get
			{
				return this._Nazwisko;
			}
			set
			{
				if ((this._Nazwisko != value))
				{
					this.OnNazwiskoChanging(value);
					this.SendPropertyChanging();
					this._Nazwisko = value;
					this.SendPropertyChanged("Nazwisko");
					this.OnNazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WybraneIdRoku", DbType="Int")]
		public System.Nullable<int> WybraneIdRoku
		{
			get
			{
				return this._WybraneIdRoku;
			}
			set
			{
				if ((this._WybraneIdRoku != value))
				{
					this.OnWybraneIdRokuChanging(value);
					this.SendPropertyChanging();
					this._WybraneIdRoku = value;
					this.SendPropertyChanged("WybraneIdRoku");
					this.OnWybraneIdRokuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WybraneIdFirmy", DbType="Int")]
		public System.Nullable<int> WybraneIdFirmy
		{
			get
			{
				return this._WybraneIdFirmy;
			}
			set
			{
				if ((this._WybraneIdFirmy != value))
				{
					this.OnWybraneIdFirmyChanging(value);
					this.SendPropertyChanging();
					this._WybraneIdFirmy = value;
					this.SendPropertyChanged("WybraneIdFirmy");
					this.OnWybraneIdFirmyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uzytkownik_webpages_UsersInRole", Storage="_webpages_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<webpages_UsersInRole> webpages_UsersInRoles
		{
			get
			{
				return this._webpages_UsersInRoles;
			}
			set
			{
				this._webpages_UsersInRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_webpages_UsersInRoles(webpages_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.Uzytkownik = this;
		}
		
		private void detach_webpages_UsersInRoles(webpages_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.Uzytkownik = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Uzytkownicy_vw")]
	public partial class UzytkownikMembership
	{
		
		private int _UserId;
		
		private string _UserName;
		
		private string _Imie;
		
		private string _Nazwisko;
		
		private System.Nullable<int> _WybraneIdRoku;
		
		private System.Nullable<int> _WybraneIdFirmy;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _ConfirmationToken;
		
		private System.Nullable<bool> _IsConfirmed;
		
		private System.Nullable<System.DateTime> _LastPasswordFailureDate;
		
		private int _PasswordFailuresSinceLastSuccess;
		
		private System.Nullable<System.DateTime> _PasswordChangedDate;
		
		private string _PasswordSalt;
		
		private string _PasswordVerificationToken;
		
		private System.Nullable<System.DateTime> _PasswordVerificationTokenExpirationDate;
		
		private System.Nullable<int> _CzyAdmin;
		
		private System.Nullable<int> _CzyKancelaria;
		
		public UzytkownikMembership()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(56) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imie", DbType="NVarChar(50)")]
		public string Imie
		{
			get
			{
				return this._Imie;
			}
			set
			{
				if ((this._Imie != value))
				{
					this._Imie = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwisko", DbType="NVarChar(50)")]
		public string Nazwisko
		{
			get
			{
				return this._Nazwisko;
			}
			set
			{
				if ((this._Nazwisko != value))
				{
					this._Nazwisko = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WybraneIdRoku", DbType="Int")]
		public System.Nullable<int> WybraneIdRoku
		{
			get
			{
				return this._WybraneIdRoku;
			}
			set
			{
				if ((this._WybraneIdRoku != value))
				{
					this._WybraneIdRoku = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WybraneIdFirmy", DbType="Int")]
		public System.Nullable<int> WybraneIdFirmy
		{
			get
			{
				return this._WybraneIdFirmy;
			}
			set
			{
				if ((this._WybraneIdFirmy != value))
				{
					this._WybraneIdFirmy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationToken", DbType="NVarChar(128)")]
		public string ConfirmationToken
		{
			get
			{
				return this._ConfirmationToken;
			}
			set
			{
				if ((this._ConfirmationToken != value))
				{
					this._ConfirmationToken = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConfirmed", DbType="Bit")]
		public System.Nullable<bool> IsConfirmed
		{
			get
			{
				return this._IsConfirmed;
			}
			set
			{
				if ((this._IsConfirmed != value))
				{
					this._IsConfirmed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordFailureDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPasswordFailureDate
		{
			get
			{
				return this._LastPasswordFailureDate;
			}
			set
			{
				if ((this._LastPasswordFailureDate != value))
				{
					this._LastPasswordFailureDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFailuresSinceLastSuccess", DbType="Int NOT NULL")]
		public int PasswordFailuresSinceLastSuccess
		{
			get
			{
				return this._PasswordFailuresSinceLastSuccess;
			}
			set
			{
				if ((this._PasswordFailuresSinceLastSuccess != value))
				{
					this._PasswordFailuresSinceLastSuccess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordChangedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PasswordChangedDate
		{
			get
			{
				return this._PasswordChangedDate;
			}
			set
			{
				if ((this._PasswordChangedDate != value))
				{
					this._PasswordChangedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this._PasswordSalt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordVerificationToken", DbType="NVarChar(128)")]
		public string PasswordVerificationToken
		{
			get
			{
				return this._PasswordVerificationToken;
			}
			set
			{
				if ((this._PasswordVerificationToken != value))
				{
					this._PasswordVerificationToken = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordVerificationTokenExpirationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PasswordVerificationTokenExpirationDate
		{
			get
			{
				return this._PasswordVerificationTokenExpirationDate;
			}
			set
			{
				if ((this._PasswordVerificationTokenExpirationDate != value))
				{
					this._PasswordVerificationTokenExpirationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CzyAdmin", DbType="Int")]
		public System.Nullable<int> CzyAdmin
		{
			get
			{
				return this._CzyAdmin;
			}
			set
			{
				if ((this._CzyAdmin != value))
				{
					this._CzyAdmin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CzyKancelaria", DbType="Int")]
		public System.Nullable<int> CzyKancelaria
		{
			get
			{
				return this._CzyKancelaria;
			}
			set
			{
				if ((this._CzyKancelaria != value))
				{
					this._CzyKancelaria = value;
				}
			}
		}
	}
	
	public partial class SkorygujFaktureSprzedazyResult
	{
		
		private System.Nullable<int> _Column1;
		
		public SkorygujFaktureSprzedazyResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
